{"title":"React消息订阅与发布机制（组件之间传值）","slug":"250","date":"2022-11-25T07:34:13.000Z","updated":"2022-11-25T07:52:39.600Z","comments":true,"path":"api/articles/250.json","excerpt":null,"covers":null,"content":"<blockquote>\n<p>先订阅，再发布（理解：隔空对话的感觉）<br>安装第三方库pubsub-js yarn add pubsub-js，利用钩子函数componentDidMount在组件挂载后subscribe（）函数进行订阅消息，该行为会返回一个token值，供<strong>unsubscribe（）</strong>取消订阅时使用，根据token取消对应的消息.</p>\n</blockquote>\n<p>安装</p>\n<blockquote>\n<p> npm install pubsub-js<br> yarn add pubsub-js</p>\n</blockquote>\n<p>引入</p>\n<blockquote>\n<p> import pubsub from ‘pubsub-js’;</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//订阅</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">componentDidMount</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.token = PubSub.subscribe(<span class=\"string\">&#x27;usersData&#x27;</span>,<span class=\"function\">(<span class=\"params\">_,data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;订阅消息：&#x27;</span>,data)</span><br><span class=\"line\">           <span class=\"built_in\">this</span>.setState(&#123;...data&#125;)</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>publish() 进行发布消息</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//发布消息</span></span><br><span class=\"line\">PubSub.publish(<span class=\"string\">&#x27;usersData&#x27;</span>,&#123;<span class=\"attr\">isFirst</span>:<span class=\"literal\">false</span>,<span class=\"attr\">isLoading</span>:<span class=\"literal\">true</span>&#125;)</span><br><span class=\"line\">   <span class=\"comment\">//发送网络请求</span></span><br><span class=\"line\">   axios.get(<span class=\"string\">`https://api.github.com/search/users?q=<span class=\"subst\">$&#123;keyWord&#125;</span>`</span>).then(</span><br><span class=\"line\">       <span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// this.props.UpdateAppState(&#123;isLoading:false,users:response.data.items&#125;)</span></span><br><span class=\"line\">           PubSub.publish(<span class=\"string\">&#x27;usersData&#x27;</span>,&#123;<span class=\"attr\">isLoading</span>:<span class=\"literal\">false</span>,<span class=\"attr\">users</span>:response.data.items&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">//this.props.UpdateAppState(&#123;isLoading:false,err:error.message&#125;)&#125;</span></span><br><span class=\"line\">           PubSub.publish(<span class=\"string\">&#x27;usersData&#x27;</span>,&#123;<span class=\"attr\">isLoading</span>:<span class=\"literal\">false</span>,<span class=\"attr\">err</span>:error.message&#125;)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">           </span><br><span class=\"line\">   )</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>适用于任意组件间通信<br>不像props,限制在父子间传递</p>\n<p>要在组件的componentWillUnMount中取消订阅</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//取消订阅</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">componentWillUnmount</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    PubSub.unsubscribe(<span class=\"built_in\">this</span>.token)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","more":"<blockquote>\n<p>先订阅，再发布（理解：隔空对话的感觉）<br>安装第三方库pubsub-js yarn add pubsub-js，利用钩子函数componentDidMount在组件挂载后subscribe（）函数进行订阅消息，该行为会返回一个token值，供<strong>unsubscribe（）</strong>取消订阅时使用，根据token取消对应的消息.</p>\n</blockquote>\n<p>安装</p>\n<blockquote>\n<p> npm install pubsub-js<br> yarn add pubsub-js</p>\n</blockquote>\n<p>引入</p>\n<blockquote>\n<p> import pubsub from ‘pubsub-js’;</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//订阅</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"title\">componentDidMount</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"built_in\">this</span>.token = PubSub.subscribe(<span class=\"string\">&#x27;usersData&#x27;</span>,<span class=\"function\">(<span class=\"params\">_,data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;订阅消息：&#x27;</span>,data)</span><br><span class=\"line\">           <span class=\"built_in\">this</span>.setState(&#123;...data&#125;)</span><br><span class=\"line\">       &#125;)</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>publish() 进行发布消息</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//发布消息</span></span><br><span class=\"line\">PubSub.publish(<span class=\"string\">&#x27;usersData&#x27;</span>,&#123;<span class=\"attr\">isFirst</span>:<span class=\"literal\">false</span>,<span class=\"attr\">isLoading</span>:<span class=\"literal\">true</span>&#125;)</span><br><span class=\"line\">   <span class=\"comment\">//发送网络请求</span></span><br><span class=\"line\">   axios.get(<span class=\"string\">`https://api.github.com/search/users?q=<span class=\"subst\">$&#123;keyWord&#125;</span>`</span>).then(</span><br><span class=\"line\">       <span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">// this.props.UpdateAppState(&#123;isLoading:false,users:response.data.items&#125;)</span></span><br><span class=\"line\">           PubSub.publish(<span class=\"string\">&#x27;usersData&#x27;</span>,&#123;<span class=\"attr\">isLoading</span>:<span class=\"literal\">false</span>,<span class=\"attr\">users</span>:response.data.items&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       <span class=\"function\"><span class=\"params\">error</span> =&gt;</span> &#123;</span><br><span class=\"line\">           <span class=\"comment\">//this.props.UpdateAppState(&#123;isLoading:false,err:error.message&#125;)&#125;</span></span><br><span class=\"line\">           PubSub.publish(<span class=\"string\">&#x27;usersData&#x27;</span>,&#123;<span class=\"attr\">isLoading</span>:<span class=\"literal\">false</span>,<span class=\"attr\">err</span>:error.message&#125;)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">           </span><br><span class=\"line\">   )</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>适用于任意组件间通信<br>不像props,限制在父子间传递</p>\n<p>要在组件的componentWillUnMount中取消订阅</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//取消订阅</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">componentWillUnmount</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    PubSub.unsubscribe(<span class=\"built_in\">this</span>.token)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"React","path":"api/categories/React.json"}],"tags":[{"name":"React","path":"api/tags/React.json"}]}