{"title":"JavaScript 性能优化之防篡改对象","slug":"39","date":"2020-06-04T05:57:55.000Z","updated":"2022-07-29T04:22:04.781Z","comments":true,"path":"api/articles/39.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/614471271c9441f7875fd85189ccd300.jpg"],"content":"<p><img src=\"https://qny.aqingya.cn/img/614471271c9441f7875fd85189ccd300.jpg\"></p>\n<span id=\"more\"></span>\n\n<p>我们在开发中有时候会不经意的修改了别人的代码，可能会造成严重的后果，于是ES5定义了防篡改对象。<span style=\"color:red\"><strong>但是要注意，一旦把对象定义为防篡改对象，就无法撤销了。</strong></span></p>\n<h2 id=\"不可扩展对象\"><a href=\"#不可扩展对象\" class=\"headerlink\" title=\"不可扩展对象\"></a>不可扩展对象</h2><p>默认情况下，所有对象都是可以扩展的。也就是说，任何时候都可以向对象中添加属性和方法。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      person.age = <span class=\"number\">14</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(person);<span class=\"comment\">//&#123;name: &quot;阿清&quot;, age: 14&#125;</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(person.age);<span class=\"comment\">//14</span></span><br></pre></td></tr></table></figure>\n\n<p>如果我们使用<strong>Object.preventExtensions()</strong> 方法可以改变这一行为。不能再添加属性或者方法。<strong>虽然不能扩展该对象，但是不影响原有的属性，原有的属性仍然可以进行修改或者删除。</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.preventExtensions(person); <span class=\"comment\">//将person设置为不可扩展对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.age = <span class=\"number\">14</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person); <span class=\"comment\">//&#123;name: &quot;阿清&quot;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.age); <span class=\"comment\">//undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.name = <span class=\"string\">&quot;阿广&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//阿广</span></span><br></pre></td></tr></table></figure>\n<p>使用 <strong>Object.isExtensible()</strong> 方法可以确定该对象是否为可扩展对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//ture</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.preventExtensions(person);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"密封对象\"><a href=\"#密封对象\" class=\"headerlink\" title=\"密封对象\"></a>密封对象</h2><p>ECMAScript 5为对象定义的第二个保护级别是密封对象( sealed object)。密封对象不可扩展，而且已有成员的  [ [Configurable] ] 特性将被设置为false。这就意味着不能删除属性和方法，因为不能使用**Object.defineProperty ()**把数据属性修改为访问器属性，或者相反。属性值是可以修改的。<br>要密封对象，使用 <strong>Object.seal( )</strong> 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.seal(person);</span><br><span class=\"line\"></span><br><span class=\"line\">person.age = <span class=\"number\">19</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.age); <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"comment\">//无法给密封对象添加属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person.name;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name); <span class=\"comment\">//阿清</span></span><br><span class=\"line\"><span class=\"comment\">// 无法修改密封对象中的属性。</span></span><br></pre></td></tr></table></figure>\n\n<p>可以使用<strong>Object.isSealed()</strong> 方法确定对象是否被密封。而且由于被密封的对象不可扩展，所以<strong>Object.isExtensible()</strong> 检测也会返回 <strong>false</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.seal(person);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isSealed(person)); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"冻结对象\"><a href=\"#冻结对象\" class=\"headerlink\" title=\"冻结对象\"></a>冻结对象</h2><p>最严格的防篡改级别是冻结对象( frozen object)。冻结的对象既不可扩展，又是密封的，而且对象，数据属性的[ [Writable] ]特性会被设置为<strong>false</strong>。 如果定义[ [Set] ]函数，访问器属性仍然是可写的。ES5定义的Object. freeze()方法可以用来冻结对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.freeze(person);</span><br><span class=\"line\">person.age = <span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.age); <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person.name;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name); <span class=\"comment\">//&quot;阿清&quot;</span></span><br><span class=\"line\">person.name = <span class=\"string\">&quot;阿广&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name); <span class=\"comment\">//&quot;阿清&quot;</span></span><br></pre></td></tr></table></figure>\n<p>当然，也有一个<strong>Object. isFrozen()<strong>方法用于检测冻结对象。因为冻结对象既是密封的又是不可扩展的，所以用</strong>Object. isExtensible()<strong>和</strong>Object.isSealed ()<strong>检测冻结对象将分别返回</strong>false</strong>和<strong>true</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//true</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isSealed(person)); <span class=\"comment\">//false</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isFrozen(person)); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.freeze(person);</span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//false</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isSealed(person)); <span class=\"comment\">//true</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isFrozen(person)); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><span style=\"color:red\"><strong>有一点要注意：在对防篡改对象进行非法操作时，在非严格模式是会忽略，但是在严格模式下会抛出错误。</strong></span></p>\n<br>\n<br>\n愿你的坚持终有收获。\n<br>\n<br>\n","more":"<p>我们在开发中有时候会不经意的修改了别人的代码，可能会造成严重的后果，于是ES5定义了防篡改对象。<span style=\"color:red\"><strong>但是要注意，一旦把对象定义为防篡改对象，就无法撤销了。</strong></span></p>\n<h2 id=\"不可扩展对象\"><a href=\"#不可扩展对象\" class=\"headerlink\" title=\"不可扩展对象\"></a>不可扩展对象</h2><p>默认情况下，所有对象都是可以扩展的。也就是说，任何时候都可以向对象中添加属性和方法。比如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">          <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      person.age = <span class=\"number\">14</span>;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(person);<span class=\"comment\">//&#123;name: &quot;阿清&quot;, age: 14&#125;</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(person.age);<span class=\"comment\">//14</span></span><br></pre></td></tr></table></figure>\n\n<p>如果我们使用<strong>Object.preventExtensions()</strong> 方法可以改变这一行为。不能再添加属性或者方法。<strong>虽然不能扩展该对象，但是不影响原有的属性，原有的属性仍然可以进行修改或者删除。</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.preventExtensions(person); <span class=\"comment\">//将person设置为不可扩展对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.age = <span class=\"number\">14</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person); <span class=\"comment\">//&#123;name: &quot;阿清&quot;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.age); <span class=\"comment\">//undefined</span></span><br><span class=\"line\"></span><br><span class=\"line\">person.name = <span class=\"string\">&quot;阿广&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name);<span class=\"comment\">//阿广</span></span><br></pre></td></tr></table></figure>\n<p>使用 <strong>Object.isExtensible()</strong> 方法可以确定该对象是否为可扩展对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//ture</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.preventExtensions(person);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"密封对象\"><a href=\"#密封对象\" class=\"headerlink\" title=\"密封对象\"></a>密封对象</h2><p>ECMAScript 5为对象定义的第二个保护级别是密封对象( sealed object)。密封对象不可扩展，而且已有成员的  [ [Configurable] ] 特性将被设置为false。这就意味着不能删除属性和方法，因为不能使用**Object.defineProperty ()**把数据属性修改为访问器属性，或者相反。属性值是可以修改的。<br>要密封对象，使用 <strong>Object.seal( )</strong> 。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.seal(person);</span><br><span class=\"line\"></span><br><span class=\"line\">person.age = <span class=\"number\">19</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.age); <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"comment\">//无法给密封对象添加属性</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person.name;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name); <span class=\"comment\">//阿清</span></span><br><span class=\"line\"><span class=\"comment\">// 无法修改密封对象中的属性。</span></span><br></pre></td></tr></table></figure>\n\n<p>可以使用<strong>Object.isSealed()</strong> 方法确定对象是否被密封。而且由于被密封的对象不可扩展，所以<strong>Object.isExtensible()</strong> 检测也会返回 <strong>false</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.seal(person);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isSealed(person)); <span class=\"comment\">//true</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"冻结对象\"><a href=\"#冻结对象\" class=\"headerlink\" title=\"冻结对象\"></a>冻结对象</h2><p>最严格的防篡改级别是冻结对象( frozen object)。冻结的对象既不可扩展，又是密封的，而且对象，数据属性的[ [Writable] ]特性会被设置为<strong>false</strong>。 如果定义[ [Set] ]函数，访问器属性仍然是可写的。ES5定义的Object. freeze()方法可以用来冻结对象。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">Object</span>.freeze(person);</span><br><span class=\"line\">person.age = <span class=\"number\">18</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.age); <span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> person.name;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name); <span class=\"comment\">//&quot;阿清&quot;</span></span><br><span class=\"line\">person.name = <span class=\"string\">&quot;阿广&quot;</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(person.name); <span class=\"comment\">//&quot;阿清&quot;</span></span><br></pre></td></tr></table></figure>\n<p>当然，也有一个<strong>Object. isFrozen()<strong>方法用于检测冻结对象。因为冻结对象既是密封的又是不可扩展的，所以用</strong>Object. isExtensible()<strong>和</strong>Object.isSealed ()<strong>检测冻结对象将分别返回</strong>false</strong>和<strong>true</strong>。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;阿清&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//true</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isSealed(person)); <span class=\"comment\">//false</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isFrozen(person)); <span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.freeze(person);</span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isExtensible(person)); <span class=\"comment\">//false</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isSealed(person)); <span class=\"comment\">//true</span></span><br><span class=\"line\">alert(<span class=\"built_in\">Object</span>.isFrozen(person)); <span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<p><span style=\"color:red\"><strong>有一点要注意：在对防篡改对象进行非法操作时，在非严格模式是会忽略，但是在严格模式下会抛出错误。</strong></span></p>\n<br>\n<br>\n愿你的坚持终有收获。\n<br>\n<br>","categories":[{"name":"JavaScript","path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","path":"api/tags/JavaScript.json"},{"name":"性能优化","path":"api/tags/性能优化.json"}]}