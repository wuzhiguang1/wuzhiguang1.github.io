{"title":"JavaScript正则表达式-常见面试题总结","slug":"twenty-five","date":"2020-05-10T12:41:43.000Z","updated":"2022-07-29T04:22:04.753Z","comments":true,"path":"api/articles/twenty-five.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/0ad7df3c78a34d90b3a7a49a82ea9120.jpg","https://img-blog.csdnimg.cn/20200512203558386.png","https://img-blog.csdnimg.cn/2020051220375457.png"],"content":"<p><img src=\"https://qny.aqingya.cn/img/0ad7df3c78a34d90b3a7a49a82ea9120.jpg\"></p>\n<span id=\"more\"></span>\n\n<h2 id=\"问题一\"><a href=\"#问题一\" class=\"headerlink\" title=\"问题一\"></a>问题一</h2><p>JavaScript 写一个字符串转成驼峰的方法，o_div_style_position转成oDivStylePosotion。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;border-bottom-color&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> strRg = str.replace(<span class=\"regexp\">/\\-[a-z]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> params.charAt(<span class=\"number\">1</span>).toUpperCase();</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(strRg);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>charAt(1)也可以用substr(1)、substring(1)来替代。</li>\n<li>toUpperCase()转换成大写字母。</li>\n<li>/-[a-z]/g中g表示全文检索，part表示匹配到的字符</li>\n<li>replace是字符串的方法，返回经过修改的新字符串。</li>\n</ol>\n<h2 id=\"问题二\"><a href=\"#问题二\" class=\"headerlink\" title=\"问题二\"></a>问题二</h2><p>JavaScript 查找字符串中出现最多字符的个数<br>例如：sdjksfssscfssdd -&gt;字符最多的是s，出现了7次</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;sdjksfssscfssdd&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxObj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxCou = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (str) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(str[<span class=\"number\">0</span>], <span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> currStr = str[<span class=\"number\">0</span>];</span><br><span class=\"line\">  str = str.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">part</span>) </span>&#123;</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt; maxCou) &#123;</span><br><span class=\"line\">    maxObj.key = currStr;</span><br><span class=\"line\">    maxCou = maxObj.count = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(maxObj.key + <span class=\"string\">&#x27;:&#x27;</span> + maxObj.count)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题三\"><a href=\"#问题三\" class=\"headerlink\" title=\"问题三\"></a>问题三</h2><p>JavaScript 把12233435566690中连续重复的数字去掉</p>\n<p>判断是否为空字符串，是就直接返回；</p>\n<p>不是的话</p>\n<p>初始字符串为str第一个，从第二个开始，如果不等于他们前一个的字符，代表不重复，加入初始字符，迭代进行，直到最后一个，返回</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeRepetition</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str != <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = str[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; str.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (str[i] != str[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        result += str[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> result = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(removeRepetition(<span class=\"string\">&quot;sssssssssaaaaaaaaasasas&quot;</span>)); <span class=\"comment\">//sasasas</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题四\"><a href=\"#问题四\" class=\"headerlink\" title=\"问题四\"></a>问题四</h2><p>JavaScript 用js实现千位分隔符?</p>\n<p>例如123456789–&gt;123,456,789</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;123456789&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^([1-9]\\d&#123;0,2&#125;)((?:\\d&#123;3&#125;)+)$/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s = str.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">RegExp</span>.$1 + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"built_in\">RegExp</span>.$2.match(<span class=\"regexp\">/\\d&#123;3&#125;/g</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s);<span class=\"comment\">//123,456,789</span></span><br></pre></td></tr></table></figure>\n<p>知识点</p>\n<ul>\n<li>将第一个逗号前面的数字作为第一组，后面所有数字为第二组，第二组是由多个三位的数字组合而成的，整体需要匹配捕获，但是每个三位数不需要匹配捕获所以加？：。</li>\n<li>RegExp.$1获取第一个分组，RegExp.$2获取第二个分组。</li>\n<li>match返回匹配到的数据，是数组类型。</li>\n</ul>\n<p>注意：IE10中直接调用分组不识别，需要在此前调用test方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;123456789&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^([1-9]\\d&#123;0,2&#125;)((?:\\d&#123;3&#125;)+)$/</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (reg.test(str)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = str.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">RegExp</span>.$1 + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"built_in\">RegExp</span>.$2.match(<span class=\"regexp\">/\\d&#123;3&#125;/g</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s);<span class=\"comment\">//123,456,789</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题五\"><a href=\"#问题五\" class=\"headerlink\" title=\"问题五\"></a>问题五</h2><p>JavaScript 写一个正则表达式判断字符串是否是对称数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;Woow&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^([a-z])([a-z])\\2\\1$/i</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (reg.test(str)) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;ok&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题六\"><a href=\"#问题六\" class=\"headerlink\" title=\"问题六\"></a>问题六</h2><p>JavaScript 写出一个正则表达式用于匹配由数字和字母组成的字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkPassWord</span> (<span class=\"params\">nubmer</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> re = <span class=\"regexp\">/^[0-9a-zA-Z]*$/</span>;  <span class=\"comment\">//判断字符串是否为数字和字母组合</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!re.test(nubmer)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<br>\n<br>\n\n<hr>\n<h2 id=\"test-也能捕获（本意是匹配）\"><a href=\"#test-也能捕获（本意是匹配）\" class=\"headerlink\" title=\"test() 也能捕获（本意是匹配）\"></a>test() 也能捕获（本意是匹配）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;wzg123wzg45wzg52&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d+)/g</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">RegExp</span>.$1);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">RegExp</span>.$1);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">RegExp</span>.$1);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200512203558386.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<h2 id=\"案例：把时间字符串进行处理\"><a href=\"#案例：把时间字符串进行处理\" class=\"headerlink\" title=\"案例：把时间字符串进行处理\"></a>案例：把时间字符串进行处理</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"string\">&quot;2020-5-1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)/</span>;</span><br><span class=\"line\">time = time.replace(reg, <span class=\"string\">&quot;$1年$2月$3日&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>也可以这样处理str.replace(reg,function(){})</p>\n<ol>\n<li>首先拿REG和TIME进行匹配捕获，能匹配到几次就会把传递的函数执行几次（而且是匹配一次就执行一次）</li>\n<li>不仅把方法执行，而且EWPLACE还给方法传递了实参信息（和exec捕获的内容一致的信息：大正则匹配的内容，小分组匹配的信息）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"string\">&quot;2020-5-1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)/</span>;</span><br><span class=\"line\">time = time.replace(reg, <span class=\"function\">(<span class=\"params\">big, $<span class=\"number\">1</span>, $<span class=\"number\">2</span>, $<span class=\"number\">3</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(big, $<span class=\"number\">1</span>, $<span class=\"number\">2</span>, $<span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2020051220375457.png\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"3\">\n<li>在函数中我们返回的是啥，就把当前大正则匹配的内容替换成啥。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"string\">&quot;2020-5-1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)/</span>;</span><br><span class=\"line\">time = time.replace(reg, <span class=\"function\">(<span class=\"params\">...arg</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [, $<span class=\"number\">1</span>, $<span class=\"number\">2</span>, $<span class=\"number\">3</span>] = arg;</span><br><span class=\"line\">    $<span class=\"number\">2.</span>length &lt; <span class=\"number\">2</span> ? $<span class=\"number\">2</span> = <span class=\"string\">&quot;0&quot;</span> + $<span class=\"number\">2</span> : <span class=\"literal\">null</span></span><br><span class=\"line\">    $<span class=\"number\">3.</span>length &lt; <span class=\"number\">2</span> ? $<span class=\"number\">3</span> = <span class=\"string\">&quot;0&quot;</span> + $<span class=\"number\">3</span> : <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $<span class=\"number\">1</span> + <span class=\"string\">&quot;年&quot;</span> + $<span class=\"number\">2</span> + <span class=\"string\">&quot;月&quot;</span> + $<span class=\"number\">3</span> + <span class=\"string\">&quot;日&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(time);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"案例：字符串首字母大写\"><a href=\"#案例：字符串首字母大写\" class=\"headerlink\" title=\"案例：字符串首字母大写\"></a>案例：字符串首字母大写</h2><p>函数被执行了六次，每一次都把正则匹配的信息传递给函数<br>每一次匹配：[“good”,”g”] [“good”,”g”] …</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;good good study, day day up&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\b([a-zA-Z])[a-zA-Z]*\\b/g</span>;</span><br><span class=\"line\">str = str.replace(reg, <span class=\"function\">(<span class=\"params\">...arg</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> [content, $<span class=\"number\">1</span>] = arg;</span><br><span class=\"line\">    $<span class=\"number\">1</span> = $<span class=\"number\">1.</span>toUpperCase();</span><br><span class=\"line\">    content = content.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $<span class=\"number\">1</span> + content;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str);</span><br></pre></td></tr></table></figure>\n\n\n<br>\n<br>\n愿你的坚持终有收获。\n<br>\n<br>\n","more":"<h2 id=\"问题一\"><a href=\"#问题一\" class=\"headerlink\" title=\"问题一\"></a>问题一</h2><p>JavaScript 写一个字符串转成驼峰的方法，o_div_style_position转成oDivStylePosotion。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;border-bottom-color&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> strRg = str.replace(<span class=\"regexp\">/\\-[a-z]/g</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">params</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> params.charAt(<span class=\"number\">1</span>).toUpperCase();</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(strRg);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>charAt(1)也可以用substr(1)、substring(1)来替代。</li>\n<li>toUpperCase()转换成大写字母。</li>\n<li>/-[a-z]/g中g表示全文检索，part表示匹配到的字符</li>\n<li>replace是字符串的方法，返回经过修改的新字符串。</li>\n</ol>\n<h2 id=\"问题二\"><a href=\"#问题二\" class=\"headerlink\" title=\"问题二\"></a>问题二</h2><p>JavaScript 查找字符串中出现最多字符的个数<br>例如：sdjksfssscfssdd -&gt;字符最多的是s，出现了7次</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;sdjksfssscfssdd&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxObj = &#123;</span><br><span class=\"line\">    <span class=\"attr\">key</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">count</span>: <span class=\"literal\">null</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> maxCou = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (str) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> reg = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(str[<span class=\"number\">0</span>], <span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> currStr = str[<span class=\"number\">0</span>];</span><br><span class=\"line\">  str = str.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">part</span>) </span>&#123;</span><br><span class=\"line\">    i++;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (i &gt; maxCou) &#123;</span><br><span class=\"line\">    maxObj.key = currStr;</span><br><span class=\"line\">    maxCou = maxObj.count = i;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(maxObj.key + <span class=\"string\">&#x27;:&#x27;</span> + maxObj.count)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题三\"><a href=\"#问题三\" class=\"headerlink\" title=\"问题三\"></a>问题三</h2><p>JavaScript 把12233435566690中连续重复的数字去掉</p>\n<p>判断是否为空字符串，是就直接返回；</p>\n<p>不是的话</p>\n<p>初始字符串为str第一个，从第二个开始，如果不等于他们前一个的字符，代表不重复，加入初始字符，迭代进行，直到最后一个，返回</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">removeRepetition</span> (<span class=\"params\">str</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (str != <span class=\"string\">&#x27;&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = str[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; str.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (str[i] != str[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">        result += str[i];</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> result = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(removeRepetition(<span class=\"string\">&quot;sssssssssaaaaaaaaasasas&quot;</span>)); <span class=\"comment\">//sasasas</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题四\"><a href=\"#问题四\" class=\"headerlink\" title=\"问题四\"></a>问题四</h2><p>JavaScript 用js实现千位分隔符?</p>\n<p>例如123456789–&gt;123,456,789</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;123456789&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^([1-9]\\d&#123;0,2&#125;)((?:\\d&#123;3&#125;)+)$/</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> s = str.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">RegExp</span>.$1 + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"built_in\">RegExp</span>.$2.match(<span class=\"regexp\">/\\d&#123;3&#125;/g</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s);<span class=\"comment\">//123,456,789</span></span><br></pre></td></tr></table></figure>\n<p>知识点</p>\n<ul>\n<li>将第一个逗号前面的数字作为第一组，后面所有数字为第二组，第二组是由多个三位的数字组合而成的，整体需要匹配捕获，但是每个三位数不需要匹配捕获所以加？：。</li>\n<li>RegExp.$1获取第一个分组，RegExp.$2获取第二个分组。</li>\n<li>match返回匹配到的数据，是数组类型。</li>\n</ul>\n<p>注意：IE10中直接调用分组不识别，需要在此前调用test方法：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;123456789&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^([1-9]\\d&#123;0,2&#125;)((?:\\d&#123;3&#125;)+)$/</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (reg.test(str)) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> s = str.replace(reg, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">RegExp</span>.$1 + <span class=\"string\">&#x27;,&#x27;</span> + <span class=\"built_in\">RegExp</span>.$2.match(<span class=\"regexp\">/\\d&#123;3&#125;/g</span>);</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(s);<span class=\"comment\">//123,456,789</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题五\"><a href=\"#问题五\" class=\"headerlink\" title=\"问题五\"></a>问题五</h2><p>JavaScript 写一个正则表达式判断字符串是否是对称数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&#x27;Woow&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/^([a-z])([a-z])\\2\\1$/i</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (reg.test(str)) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;ok&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"问题六\"><a href=\"#问题六\" class=\"headerlink\" title=\"问题六\"></a>问题六</h2><p>JavaScript 写出一个正则表达式用于匹配由数字和字母组成的字符串</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkPassWord</span> (<span class=\"params\">nubmer</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> re = <span class=\"regexp\">/^[0-9a-zA-Z]*$/</span>;  <span class=\"comment\">//判断字符串是否为数字和字母组合</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!re.test(nubmer)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<br>\n<br>\n\n<hr>\n<h2 id=\"test-也能捕获（本意是匹配）\"><a href=\"#test-也能捕获（本意是匹配）\" class=\"headerlink\" title=\"test() 也能捕获（本意是匹配）\"></a>test() 也能捕获（本意是匹配）</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;wzg123wzg45wzg52&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d+)/g</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">RegExp</span>.$1);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">RegExp</span>.$1);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">RegExp</span>.$1);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/20200512203558386.png\" alt=\"在这里插入图片描述\"></p>\n<hr>\n<h2 id=\"案例：把时间字符串进行处理\"><a href=\"#案例：把时间字符串进行处理\" class=\"headerlink\" title=\"案例：把时间字符串进行处理\"></a>案例：把时间字符串进行处理</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"string\">&quot;2020-5-1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)/</span>;</span><br><span class=\"line\">time = time.replace(reg, <span class=\"string\">&quot;$1年$2月$3日&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>也可以这样处理str.replace(reg,function(){})</p>\n<ol>\n<li>首先拿REG和TIME进行匹配捕获，能匹配到几次就会把传递的函数执行几次（而且是匹配一次就执行一次）</li>\n<li>不仅把方法执行，而且EWPLACE还给方法传递了实参信息（和exec捕获的内容一致的信息：大正则匹配的内容，小分组匹配的信息）</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"string\">&quot;2020-5-1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)/</span>;</span><br><span class=\"line\">time = time.replace(reg, <span class=\"function\">(<span class=\"params\">big, $<span class=\"number\">1</span>, $<span class=\"number\">2</span>, $<span class=\"number\">3</span></span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(big, $<span class=\"number\">1</span>, $<span class=\"number\">2</span>, $<span class=\"number\">3</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://img-blog.csdnimg.cn/2020051220375457.png\" alt=\"在这里插入图片描述\"></p>\n<ol start=\"3\">\n<li>在函数中我们返回的是啥，就把当前大正则匹配的内容替换成啥。</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> time = <span class=\"string\">&quot;2020-5-1&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/(\\d&#123;4&#125;)-(\\d&#123;1,2&#125;)-(\\d&#123;1,2&#125;)/</span>;</span><br><span class=\"line\">time = time.replace(reg, <span class=\"function\">(<span class=\"params\">...arg</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> [, $<span class=\"number\">1</span>, $<span class=\"number\">2</span>, $<span class=\"number\">3</span>] = arg;</span><br><span class=\"line\">    $<span class=\"number\">2.</span>length &lt; <span class=\"number\">2</span> ? $<span class=\"number\">2</span> = <span class=\"string\">&quot;0&quot;</span> + $<span class=\"number\">2</span> : <span class=\"literal\">null</span></span><br><span class=\"line\">    $<span class=\"number\">3.</span>length &lt; <span class=\"number\">2</span> ? $<span class=\"number\">3</span> = <span class=\"string\">&quot;0&quot;</span> + $<span class=\"number\">3</span> : <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> $<span class=\"number\">1</span> + <span class=\"string\">&quot;年&quot;</span> + $<span class=\"number\">2</span> + <span class=\"string\">&quot;月&quot;</span> + $<span class=\"number\">3</span> + <span class=\"string\">&quot;日&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(time);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"案例：字符串首字母大写\"><a href=\"#案例：字符串首字母大写\" class=\"headerlink\" title=\"案例：字符串首字母大写\"></a>案例：字符串首字母大写</h2><p>函数被执行了六次，每一次都把正则匹配的信息传递给函数<br>每一次匹配：[“good”,”g”] [“good”,”g”] …</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">&quot;good good study, day day up&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg = <span class=\"regexp\">/\\b([a-zA-Z])[a-zA-Z]*\\b/g</span>;</span><br><span class=\"line\">str = str.replace(reg, <span class=\"function\">(<span class=\"params\">...arg</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> [content, $<span class=\"number\">1</span>] = arg;</span><br><span class=\"line\">    $<span class=\"number\">1</span> = $<span class=\"number\">1.</span>toUpperCase();</span><br><span class=\"line\">    content = content.substring(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> $<span class=\"number\">1</span> + content;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str);</span><br></pre></td></tr></table></figure>\n\n\n<br>\n<br>\n愿你的坚持终有收获。\n<br>\n<br>","categories":[{"name":"正则表达式","path":"api/categories/正则表达式.json"}],"tags":[{"name":"正则表达式面试题","path":"api/tags/正则表达式面试题.json"}]}