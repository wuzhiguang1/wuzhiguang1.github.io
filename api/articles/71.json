{"title":"Vue CLI（脚手架）","slug":"71","date":"2020-07-29T14:49:23.000Z","updated":"2022-07-29T04:22:04.764Z","comments":true,"path":"api/articles/71.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/20200729120716.png","https://qny.aqingya.cn/img/20200729110424.png","https://qny.aqingya.cn/img/%E5%9B%BE%E7%89%871.png","https://qny.aqingya.cn/img/20200729160542.png","https://qny.aqingya.cn/img/20200729165801.png","https://qny.aqingya.cn/img/132562.png","https://qny.aqingya.cn/img/20200729224127.png","https://qny.aqingya.cn/img/20200729224409.png","https://qny.aqingya.cn/img/20200729224605.png","https://qny.aqingya.cn/img/20200729224643.png","https://qny.aqingya.cn/img/image-20200729224714892.png"],"content":"<p><img src=\"https://qny.aqingya.cn/img/20200729120716.png\"></p>\n<span id=\"more\"></span>\n\n\n\n<h1 id=\"Vue-CLI\"><a href=\"#Vue-CLI\" class=\"headerlink\" title=\"Vue CLI\"></a>Vue CLI</h1><br>\n\n<p><a href=\"https://cli.vuejs.org/zh/guide/\">Vue CLI 官网</a></p>\n<br>\n\n<h2 id=\"什么是Vue-CLI\"><a href=\"#什么是Vue-CLI\" class=\"headerlink\" title=\"什么是Vue CLI\"></a><strong>什么是Vue CLI</strong></h2><p>CLI是Command-Line Interface, 翻译为命令行界面, 但是俗称脚手架.</p>\n<p>Vue CLI是一个官方发布 vue.js 项目脚手架</p>\n<p>使用 vue-cli 可以快速搭建Vue开发环境以及对应的webpack配置.。</p>\n<br>\n\n\n\n<h2 id=\"Vue-CLI使用前提\"><a href=\"#Vue-CLI使用前提\" class=\"headerlink\" title=\"Vue CLI使用前提\"></a>Vue CLI使用前提</h2><p><strong>Node 版本要求</strong></p>\n<p>Vue CLI 需要 <a href=\"https://nodejs.org/\">Node.js</a> 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 <a href=\"https://github.com/creationix/nvm\">nvm</a> 或 <a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a> 在同一台电脑中管理多个 Node 版本。</p>\n<br>\n\n<p>Vue.js官方脚手架工具就使用了<strong>webpack</strong>模板</p>\n<p>对所有的资源会压缩等优化操作</p>\n<p>它在开发过程中提供了一套完整的功能，能够使得我们开发过程中变得高效。</p>\n<p>Webpack的全局安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack -g</span><br></pre></td></tr></table></figure>\n\n\n\n<br>\n\n<h2 id=\"Vue-CLI的安装\"><a href=\"#Vue-CLI的安装\" class=\"headerlink\" title=\"Vue CLI的安装\"></a>Vue CLI的安装</h2><p><a href=\"https://cli.vuejs.org/zh/guide/installation.html\">传送门</a></p>\n<p><strong>关于旧版本</strong></p>\n<p>Vue CLI 的包名称由 <code>vue-cli</code> 改成了 <code>@vue/cli</code>。 如果你已经全局安装了旧版本的 <code>vue-cli</code> (1.x 或 2.x)，你需要先通过 <code>npm uninstall vue-cli -g</code> 或 <code>yarn global remove vue-cli</code> 卸载它。</p>\n<p><strong>Node 版本要求</strong></p>\n<p>Vue CLI 需要 <a href=\"https://nodejs.org/\">Node.js</a> 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 <a href=\"https://github.com/creationix/nvm\">nvm</a> 或 <a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a> 在同一台电脑中管理多个 Node 版本。</p>\n<p>可以使用下列任一命令安装这个新的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br><span class=\"line\"><span class=\"comment\"># OR</span></span><br><span class=\"line\">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>安装之后，你就可以在命令行中访问 <code>vue</code> 命令。你可以通过简单运行 <code>vue</code>，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。</p>\n<p>你还可以用这个命令来检查其版本是否正确：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue --version</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<p>上面安装的是Vue CLI3的版本，如果需要想按照Vue CLI2的方式初始化项目时不可以的。</p>\n<p> <strong>拉取 2.x 模板 (旧版本)</strong></p>\n<p>Vue CLI &gt;= 3 和旧版使用了相同的 <code>vue</code> 命令，所以 Vue CLI 2 (<code>vue-cli</code>) 被覆盖了。如果你仍然需要使用旧版本的 <code>vue init</code> 功能，你可以全局安装一个桥接工具：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli-init</span><br><span class=\"line\"><span class=\"comment\"># `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同</span></span><br><span class=\"line\">vue init webpack my-project</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"Vue-CLI的使用\"><a href=\"#Vue-CLI的使用\" class=\"headerlink\" title=\"Vue CLI的使用\"></a><strong>Vue</strong> CLI的使用</h2><p><a href=\"https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create\">传送门</a></p>\n<p>Vue CLI2初始化项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack my-project</span><br></pre></td></tr></table></figure>\n\n<p>Vue CLI3初始化项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create my-project</span><br></pre></td></tr></table></figure>\n\n\n\n<br>\n\n\n\n<h2 id=\"Vue-CLI2\"><a href=\"#Vue-CLI2\" class=\"headerlink\" title=\"Vue CLI2\"></a><strong>Vue</strong> CLI2</h2><h3 id=\"Vue-CLI2详解\"><a href=\"#Vue-CLI2详解\" class=\"headerlink\" title=\"Vue CLI2详解\"></a><strong>Vue</strong> CLI2详解</h3><p><img src=\"https://qny.aqingya.cn/img/20200729110424.png\"></p>\n<br>\n\n<h3 id=\"目录结构详解\"><a href=\"#目录结构详解\" class=\"headerlink\" title=\"目录结构详解\"></a><strong>目录结构详解</strong></h3><p><img src=\"https://qny.aqingya.cn/img/%E5%9B%BE%E7%89%871.png\"></p>\n<br>\n\n<h3 id=\"Vue-CLI-中-Runtime-Compiler和Runtime-only的区别\"><a href=\"#Vue-CLI-中-Runtime-Compiler和Runtime-only的区别\" class=\"headerlink\" title=\"Vue CLI 中 Runtime-Compiler和Runtime-only的区别\"></a>Vue CLI 中 Runtime-Compiler和Runtime-only的区别</h3><p>在我们初始化vue项目的时候，会让我们选择 Runtime-Compiler 还是 Runtime-only 。<br><img src=\"https://qny.aqingya.cn/img/20200729160542.png\" alt=\"在这里插入图片描述\"></p>\n<p>那我们就来看一下他们有什么区别</p>\n<p>Runtime-Compiler：编译器版本。<br>Runtime-only：运行时版本。</p>\n<p>如果你需要在客户端编译模板（例如，向 <code>template</code>选项传入一个字符串，或者需要将模板中的非DOM的HTML挂载到一个元素），你需要带有编译器的版本，因而需要完整构建版本。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这种情况需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">template</span>:<span class=\"string\">`&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种情况不需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\">h</span>)</span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> h(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">this</span>.message)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在使用vue- loader或 verify时，*.vue文件中的模板会在构建时（build time）预编译pre-compile）为 Javascript。最终生成的 bundle中你不再需要编译器（ compiler，因此可以直接使用只含有运行时的构建版本（ runtime-only)。</p>\n<p>由于只含有运行时构建版本 （runtime-only比完整构建版本（full- build轻量大约30%,你应该尽可能使用只含有运行时的构建版本。如果你还是希望使用完整构建版本，则需要在打包器中配置别名：</p>\n<p>由于运行时版本的构建比其全面版本的重量轻约30%，Runtime-only 性能更高，代码量更少，因此你可以随时使用它。如果你仍然希望使用完整版本，则需要在捆绑程序中配置别名。</p>\n<br>\n\n<p><strong>总结</strong>：</p>\n<p><span style=\"color:red\"><strong>如果在之后的开发中，你依然使用 template ，就需要选择 Runtime-Compiler 。</strong></span><br><span style=\"color:red\"><strong>如果在之后的开发中，使用的是 .vue 文件夹开发，那么可以选择 Runtime-only 。</strong></span></p>\n<br>\n\n<p>Runtime-Compiler 和 Runtime-only</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729165801.png\"></p>\n<p>为什么存在这样的差异呢？</p>\n<p>我们需要先理解Vue应用程序是如何运行起来的。</p>\n<p>Vue中的模板如何最终渲染成真实DOM。</p>\n<p>我们来看下面的一幅图。</p>\n<p><img src=\"https://qny.aqingya.cn/img/132562.png\"></p>\n<p>Vue程序运行过程中</p>\n<p>Runtime-Compiler 执行步骤</p>\n<blockquote>\n<p>template –&gt; ast –&gt; render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 执行步骤（性能更高，代码量更少）</p>\n<blockquote>\n<p>render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 在执行代码的时候，直接就到render 了，减少<code>template --&gt; ast --&gt; render</code> 的代码量，性能更高。</p>\n<br>\n\n\n\n<h3 id=\"修改配置：webpack-base-conf-js起别名\"><a href=\"#修改配置：webpack-base-conf-js起别名\" class=\"headerlink\" title=\"修改配置：webpack.base.conf.js起别名\"></a><strong>修改配置：webpack.base.conf.js起别名</strong></h3><br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n\n\n<h2 id=\"Vue-CLI3\"><a href=\"#Vue-CLI3\" class=\"headerlink\" title=\"Vue CLI3\"></a><strong>Vue</strong> CLI3</h2><h3 id=\"认识Vue-CLI3\"><a href=\"#认识Vue-CLI3\" class=\"headerlink\" title=\"认识Vue CLI3\"></a><strong>认识Vue CLI3</strong></h3><p>vue-cli 3 与 2 版本有很大区别</p>\n<p>vue-cli 3 是基于 webpack 4 打造，vue-cli 2 还是 webapck 3</p>\n<p>vue-cli 3 的设计原则是“0配置”，移除的配置文件根目录下的，build和config等目录</p>\n<p>vue-cli 3 提供了 vue ui 命令，提供了可视化配置，更加人性化</p>\n<p>移除了static文件夹，新增了public文件夹，并且index.html移动到public中</p>\n<br>\n\n<p>初始化项目：</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729224127.png\"></p>\n<br>\n\n\n\n<h3 id=\"目录结构详解-1\"><a href=\"#目录结构详解-1\" class=\"headerlink\" title=\"目录结构详解\"></a>目录结构详解</h3><br>\n\n<p><img src=\"https://qny.aqingya.cn/img/20200729224409.png\"></p>\n<br>\n\n\n\n<h3 id=\"Vue-CLI3配置\"><a href=\"#Vue-CLI3配置\" class=\"headerlink\" title=\"Vue CLI3配置\"></a>Vue CLI3配置</h3><p>启动配置服务器：vue ui</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729224605.png\"></p>\n<br>\n\n\n\n<p>之前有一大堆配置文件去哪里了？</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729224643.png\"></p>\n<br>\n\n<h3 id=\"自定义配置：起别名\"><a href=\"#自定义配置：起别名\" class=\"headerlink\" title=\"自定义配置：起别名\"></a><strong>自定义配置：起别名</strong></h3><br>\n\n<p><img src=\"https://qny.aqingya.cn/img/image-20200729224714892.png\"></p>\n","more":"<h1 id=\"Vue-CLI\"><a href=\"#Vue-CLI\" class=\"headerlink\" title=\"Vue CLI\"></a>Vue CLI</h1><br>\n\n<p><a href=\"https://cli.vuejs.org/zh/guide/\">Vue CLI 官网</a></p>\n<br>\n\n<h2 id=\"什么是Vue-CLI\"><a href=\"#什么是Vue-CLI\" class=\"headerlink\" title=\"什么是Vue CLI\"></a><strong>什么是Vue CLI</strong></h2><p>CLI是Command-Line Interface, 翻译为命令行界面, 但是俗称脚手架.</p>\n<p>Vue CLI是一个官方发布 vue.js 项目脚手架</p>\n<p>使用 vue-cli 可以快速搭建Vue开发环境以及对应的webpack配置.。</p>\n<br>\n\n\n\n<h2 id=\"Vue-CLI使用前提\"><a href=\"#Vue-CLI使用前提\" class=\"headerlink\" title=\"Vue CLI使用前提\"></a>Vue CLI使用前提</h2><p><strong>Node 版本要求</strong></p>\n<p>Vue CLI 需要 <a href=\"https://nodejs.org/\">Node.js</a> 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 <a href=\"https://github.com/creationix/nvm\">nvm</a> 或 <a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a> 在同一台电脑中管理多个 Node 版本。</p>\n<br>\n\n<p>Vue.js官方脚手架工具就使用了<strong>webpack</strong>模板</p>\n<p>对所有的资源会压缩等优化操作</p>\n<p>它在开发过程中提供了一套完整的功能，能够使得我们开发过程中变得高效。</p>\n<p>Webpack的全局安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install webpack -g</span><br></pre></td></tr></table></figure>\n\n\n\n<br>\n\n<h2 id=\"Vue-CLI的安装\"><a href=\"#Vue-CLI的安装\" class=\"headerlink\" title=\"Vue CLI的安装\"></a>Vue CLI的安装</h2><p><a href=\"https://cli.vuejs.org/zh/guide/installation.html\">传送门</a></p>\n<p><strong>关于旧版本</strong></p>\n<p>Vue CLI 的包名称由 <code>vue-cli</code> 改成了 <code>@vue/cli</code>。 如果你已经全局安装了旧版本的 <code>vue-cli</code> (1.x 或 2.x)，你需要先通过 <code>npm uninstall vue-cli -g</code> 或 <code>yarn global remove vue-cli</code> 卸载它。</p>\n<p><strong>Node 版本要求</strong></p>\n<p>Vue CLI 需要 <a href=\"https://nodejs.org/\">Node.js</a> 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 <a href=\"https://github.com/creationix/nvm\">nvm</a> 或 <a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a> 在同一台电脑中管理多个 Node 版本。</p>\n<p>可以使用下列任一命令安装这个新的包：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli</span><br><span class=\"line\"><span class=\"comment\"># OR</span></span><br><span class=\"line\">yarn global add @vue/cli</span><br></pre></td></tr></table></figure>\n\n<p>安装之后，你就可以在命令行中访问 <code>vue</code> 命令。你可以通过简单运行 <code>vue</code>，看看是否展示出了一份所有可用命令的帮助信息，来验证它是否安装成功。</p>\n<p>你还可以用这个命令来检查其版本是否正确：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue --version</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<p>上面安装的是Vue CLI3的版本，如果需要想按照Vue CLI2的方式初始化项目时不可以的。</p>\n<p> <strong>拉取 2.x 模板 (旧版本)</strong></p>\n<p>Vue CLI &gt;= 3 和旧版使用了相同的 <code>vue</code> 命令，所以 Vue CLI 2 (<code>vue-cli</code>) 被覆盖了。如果你仍然需要使用旧版本的 <code>vue init</code> 功能，你可以全局安装一个桥接工具：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g @vue/cli-init</span><br><span class=\"line\"><span class=\"comment\"># `vue init` 的运行效果将会跟 `vue-cli@2.x` 相同</span></span><br><span class=\"line\">vue init webpack my-project</span><br></pre></td></tr></table></figure>\n\n<br>\n\n<h2 id=\"Vue-CLI的使用\"><a href=\"#Vue-CLI的使用\" class=\"headerlink\" title=\"Vue CLI的使用\"></a><strong>Vue</strong> CLI的使用</h2><p><a href=\"https://cli.vuejs.org/zh/guide/creating-a-project.html#vue-create\">传送门</a></p>\n<p>Vue CLI2初始化项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack my-project</span><br></pre></td></tr></table></figure>\n\n<p>Vue CLI3初始化项目</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue create my-project</span><br></pre></td></tr></table></figure>\n\n\n\n<br>\n\n\n\n<h2 id=\"Vue-CLI2\"><a href=\"#Vue-CLI2\" class=\"headerlink\" title=\"Vue CLI2\"></a><strong>Vue</strong> CLI2</h2><h3 id=\"Vue-CLI2详解\"><a href=\"#Vue-CLI2详解\" class=\"headerlink\" title=\"Vue CLI2详解\"></a><strong>Vue</strong> CLI2详解</h3><p><img src=\"https://qny.aqingya.cn/img/20200729110424.png\"></p>\n<br>\n\n<h3 id=\"目录结构详解\"><a href=\"#目录结构详解\" class=\"headerlink\" title=\"目录结构详解\"></a><strong>目录结构详解</strong></h3><p><img src=\"https://qny.aqingya.cn/img/%E5%9B%BE%E7%89%871.png\"></p>\n<br>\n\n<h3 id=\"Vue-CLI-中-Runtime-Compiler和Runtime-only的区别\"><a href=\"#Vue-CLI-中-Runtime-Compiler和Runtime-only的区别\" class=\"headerlink\" title=\"Vue CLI 中 Runtime-Compiler和Runtime-only的区别\"></a>Vue CLI 中 Runtime-Compiler和Runtime-only的区别</h3><p>在我们初始化vue项目的时候，会让我们选择 Runtime-Compiler 还是 Runtime-only 。<br><img src=\"https://qny.aqingya.cn/img/20200729160542.png\" alt=\"在这里插入图片描述\"></p>\n<p>那我们就来看一下他们有什么区别</p>\n<p>Runtime-Compiler：编译器版本。<br>Runtime-only：运行时版本。</p>\n<p>如果你需要在客户端编译模板（例如，向 <code>template</code>选项传入一个字符串，或者需要将模板中的非DOM的HTML挂载到一个元素），你需要带有编译器的版本，因而需要完整构建版本。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这种情况需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">template</span>:<span class=\"string\">`&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种情况不需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\">h</span>)</span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> h(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">this</span>.message)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在使用vue- loader或 verify时，*.vue文件中的模板会在构建时（build time）预编译pre-compile）为 Javascript。最终生成的 bundle中你不再需要编译器（ compiler，因此可以直接使用只含有运行时的构建版本（ runtime-only)。</p>\n<p>由于只含有运行时构建版本 （runtime-only比完整构建版本（full- build轻量大约30%,你应该尽可能使用只含有运行时的构建版本。如果你还是希望使用完整构建版本，则需要在打包器中配置别名：</p>\n<p>由于运行时版本的构建比其全面版本的重量轻约30%，Runtime-only 性能更高，代码量更少，因此你可以随时使用它。如果你仍然希望使用完整版本，则需要在捆绑程序中配置别名。</p>\n<br>\n\n<p><strong>总结</strong>：</p>\n<p><span style=\"color:red\"><strong>如果在之后的开发中，你依然使用 template ，就需要选择 Runtime-Compiler 。</strong></span><br><span style=\"color:red\"><strong>如果在之后的开发中，使用的是 .vue 文件夹开发，那么可以选择 Runtime-only 。</strong></span></p>\n<br>\n\n<p>Runtime-Compiler 和 Runtime-only</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729165801.png\"></p>\n<p>为什么存在这样的差异呢？</p>\n<p>我们需要先理解Vue应用程序是如何运行起来的。</p>\n<p>Vue中的模板如何最终渲染成真实DOM。</p>\n<p>我们来看下面的一幅图。</p>\n<p><img src=\"https://qny.aqingya.cn/img/132562.png\"></p>\n<p>Vue程序运行过程中</p>\n<p>Runtime-Compiler 执行步骤</p>\n<blockquote>\n<p>template –&gt; ast –&gt; render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 执行步骤（性能更高，代码量更少）</p>\n<blockquote>\n<p>render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 在执行代码的时候，直接就到render 了，减少<code>template --&gt; ast --&gt; render</code> 的代码量，性能更高。</p>\n<br>\n\n\n\n<h3 id=\"修改配置：webpack-base-conf-js起别名\"><a href=\"#修改配置：webpack-base-conf-js起别名\" class=\"headerlink\" title=\"修改配置：webpack.base.conf.js起别名\"></a><strong>修改配置：webpack.base.conf.js起别名</strong></h3><br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n<br>\n\n\n\n<h2 id=\"Vue-CLI3\"><a href=\"#Vue-CLI3\" class=\"headerlink\" title=\"Vue CLI3\"></a><strong>Vue</strong> CLI3</h2><h3 id=\"认识Vue-CLI3\"><a href=\"#认识Vue-CLI3\" class=\"headerlink\" title=\"认识Vue CLI3\"></a><strong>认识Vue CLI3</strong></h3><p>vue-cli 3 与 2 版本有很大区别</p>\n<p>vue-cli 3 是基于 webpack 4 打造，vue-cli 2 还是 webapck 3</p>\n<p>vue-cli 3 的设计原则是“0配置”，移除的配置文件根目录下的，build和config等目录</p>\n<p>vue-cli 3 提供了 vue ui 命令，提供了可视化配置，更加人性化</p>\n<p>移除了static文件夹，新增了public文件夹，并且index.html移动到public中</p>\n<br>\n\n<p>初始化项目：</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729224127.png\"></p>\n<br>\n\n\n\n<h3 id=\"目录结构详解-1\"><a href=\"#目录结构详解-1\" class=\"headerlink\" title=\"目录结构详解\"></a>目录结构详解</h3><br>\n\n<p><img src=\"https://qny.aqingya.cn/img/20200729224409.png\"></p>\n<br>\n\n\n\n<h3 id=\"Vue-CLI3配置\"><a href=\"#Vue-CLI3配置\" class=\"headerlink\" title=\"Vue CLI3配置\"></a>Vue CLI3配置</h3><p>启动配置服务器：vue ui</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729224605.png\"></p>\n<br>\n\n\n\n<p>之前有一大堆配置文件去哪里了？</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729224643.png\"></p>\n<br>\n\n<h3 id=\"自定义配置：起别名\"><a href=\"#自定义配置：起别名\" class=\"headerlink\" title=\"自定义配置：起别名\"></a><strong>自定义配置：起别名</strong></h3><br>\n\n<p><img src=\"https://qny.aqingya.cn/img/image-20200729224714892.png\"></p>","categories":[{"name":"Vue","path":"api/categories/Vue.json"}],"tags":[{"name":"Vue脚手架","path":"api/tags/Vue脚手架.json"}]}