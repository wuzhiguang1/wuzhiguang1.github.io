{"title":"关于Vue.use()","slug":"143","date":"2021-04-27T06:42:47.000Z","updated":"2022-07-29T04:22:04.794Z","comments":true,"path":"api/articles/143.json","excerpt":null,"covers":["https://qny.aqingya.cn/img/20210427144506.png","https://qny.aqingya.cn/img/20210427144604.png"],"content":"<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>相信很多人在用Vue使用别人的组件时，会用到 <code>Vue.use()</code> 。例如：<code>Vue.use(VueRouter)</code>、<code>Vue.use(MintUI)</code>。但是用 <code>axios</code>时，就不需要用 <code>Vue.use(axios)</code>，就能直接使用。那这是为什么呐？</p>\n<h3 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h3><p>因为 <code>axios</code> 没有 <code>install</code>。<br> 什么意思呢？接下来我们自定义一个需要 <code>Vue.use()</code> 的组件，也就是有 <code>install</code> 的组件，看完之后就明白了。</p>\n<h3 id=\"定义组件\"><a href=\"#定义组件\" class=\"headerlink\" title=\"定义组件\"></a>定义组件</h3><blockquote>\n<p>生成模版  <code>vue init webpack-simple custom-global-component</code><br> custom-global-component 为新建的文件夹名称<br> 然后一路回车<br> <code>cd custom-global-component</code> 进入该文件夹<br> <code>npm install</code> 安装本次需要的模块<br> <code>npm run dev</code> 运行项目<br> 如果能正常打开，进行下一步</p>\n</blockquote>\n<p>这是当前项目目录：</p>\n<p><img src=\"https://qny.aqingya.cn/img/20210427144506.png\"></p>\n<p>1.创建如下图中的文件夹和文件</p>\n<p><img src=\"https://qny.aqingya.cn/img/20210427144604.png\"></p>\n<p>2.在 Loading.vue 中定义一个组件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;loading-box&quot;</span>&gt;</span></span><br><span class=\"line\">        Loading...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>3.在 index.js 中 引入 Loading.vue ，并导出</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 引入组件</span><br><span class=\"line\">import LoadingComponent from &#x27;./loading.vue&#x27;</span><br><span class=\"line\">// 定义 Loading 对象</span><br><span class=\"line\">const Loading=&#123;</span><br><span class=\"line\">    // install 是默认的方法。当外界在 use 这个组件的时候，就会调用本身的 install 方法，同时传一个 Vue 这个类的参数。</span><br><span class=\"line\">    install:function(Vue)&#123;</span><br><span class=\"line\">        Vue.component(&#x27;Loading&#x27;,LoadingComponent)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 导出</span><br><span class=\"line\">export default Loading</span><br></pre></td></tr></table></figure>\n\n<p>4.在 main.js 中引入 loading 文件下的 index</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 其中&#x27;./components/loading/index&#x27; 的 /index 可以不写，webpack会自动找到并加载 index 。如果是其他的名字就需要写上。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Loading <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/loading/index&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 这时需要 use(Loading)，如果不写 Vue.use()的话，浏览器会报错，大家可以试一下</span></span><br><span class=\"line\">Vue.use(Loading)</span><br></pre></td></tr></table></figure>\n\n<p>5.在App.vue里面写入定义好的组件标签 ``</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>vue-loading<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Loading</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Loading</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>6.看到这儿大家应该就明白了吧，用 <code>axios</code>时，之所以不需要用 <code>Vue.use(axios)</code>，就能直接使用，是因为开发者在封装 <code>axios</code> 时，没有写 <code>install</code> 这一步。至于为啥没写，那就不得而知了。</p>\n<h3 id=\"转载\"><a href=\"#转载\" class=\"headerlink\" title=\"转载\"></a>转载</h3><a class=\"btn-beautify blue larger\" href=\"https://www.jianshu.com/p/89a05706917a\" \n  title=\"点击前往\"><i class=\"far fa-hand-point-right\"></i><span>点击前往</span></a>","more":"<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><p>相信很多人在用Vue使用别人的组件时，会用到 <code>Vue.use()</code> 。例如：<code>Vue.use(VueRouter)</code>、<code>Vue.use(MintUI)</code>。但是用 <code>axios</code>时，就不需要用 <code>Vue.use(axios)</code>，就能直接使用。那这是为什么呐？</p>\n<h3 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h3><p>因为 <code>axios</code> 没有 <code>install</code>。<br> 什么意思呢？接下来我们自定义一个需要 <code>Vue.use()</code> 的组件，也就是有 <code>install</code> 的组件，看完之后就明白了。</p>\n<h3 id=\"定义组件\"><a href=\"#定义组件\" class=\"headerlink\" title=\"定义组件\"></a>定义组件</h3><blockquote>\n<p>生成模版  <code>vue init webpack-simple custom-global-component</code><br> custom-global-component 为新建的文件夹名称<br> 然后一路回车<br> <code>cd custom-global-component</code> 进入该文件夹<br> <code>npm install</code> 安装本次需要的模块<br> <code>npm run dev</code> 运行项目<br> 如果能正常打开，进行下一步</p>\n</blockquote>\n<p>这是当前项目目录：</p>\n<p><img src=\"https://qny.aqingya.cn/img/20210427144506.png\"></p>\n<p>1.创建如下图中的文件夹和文件</p>\n<p><img src=\"https://qny.aqingya.cn/img/20210427144604.png\"></p>\n<p>2.在 Loading.vue 中定义一个组件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;loading-box&quot;</span>&gt;</span></span><br><span class=\"line\">        Loading...</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>3.在 index.js 中 引入 Loading.vue ，并导出</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 引入组件</span><br><span class=\"line\">import LoadingComponent from &#x27;./loading.vue&#x27;</span><br><span class=\"line\">// 定义 Loading 对象</span><br><span class=\"line\">const Loading=&#123;</span><br><span class=\"line\">    // install 是默认的方法。当外界在 use 这个组件的时候，就会调用本身的 install 方法，同时传一个 Vue 这个类的参数。</span><br><span class=\"line\">    install:function(Vue)&#123;</span><br><span class=\"line\">        Vue.component(&#x27;Loading&#x27;,LoadingComponent)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// 导出</span><br><span class=\"line\">export default Loading</span><br></pre></td></tr></table></figure>\n\n<p>4.在 main.js 中引入 loading 文件下的 index</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 其中&#x27;./components/loading/index&#x27; 的 /index 可以不写，webpack会自动找到并加载 index 。如果是其他的名字就需要写上。</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Loading <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./components/loading/index&#x27;</span></span><br><span class=\"line\"><span class=\"comment\">// 这时需要 use(Loading)，如果不写 Vue.use()的话，浏览器会报错，大家可以试一下</span></span><br><span class=\"line\">Vue.use(Loading)</span><br></pre></td></tr></table></figure>\n\n<p>5.在App.vue里面写入定义好的组件标签 ``</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;app&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>vue-loading<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Loading</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">Loading</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>6.看到这儿大家应该就明白了吧，用 <code>axios</code>时，之所以不需要用 <code>Vue.use(axios)</code>，就能直接使用，是因为开发者在封装 <code>axios</code> 时，没有写 <code>install</code> 这一步。至于为啥没写，那就不得而知了。</p>\n<h3 id=\"转载\"><a href=\"#转载\" class=\"headerlink\" title=\"转载\"></a>转载</h3><a class=\"btn-beautify blue larger\" href=\"https://www.jianshu.com/p/89a05706917a\" \n  title=\"点击前往\"><i class=\"far fa-hand-point-right\"></i><span>点击前往</span></a>","categories":[{"name":"Vue","path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","path":"api/tags/Vue.json"}]}