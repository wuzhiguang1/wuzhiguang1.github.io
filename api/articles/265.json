{"title":"Git-tag标签","slug":"265","date":"2023-03-06T08:45:10.000Z","updated":"2023-03-06T08:51:49.201Z","comments":true,"path":"api/articles/265.json","excerpt":null,"covers":null,"content":"<h1 id=\"1-什么是tag\"><a href=\"#1-什么是tag\" class=\"headerlink\" title=\"1.什么是tag\"></a>1.什么是tag</h1><h2 id=\"1-1-tag的简单理解\"><a href=\"#1-1-tag的简单理解\" class=\"headerlink\" title=\"1.1 tag的简单理解\"></a>1.1 tag的简单理解</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tag 中文我们可以称它为 标签。</span><br><span class=\"line\"></span><br><span class=\"line\">简单的理解，tag 就是 对某次 commit 的一个标识，相当于起了一个别名。</span><br><span class=\"line\">例如，在项目发布某个版本的时候，针对最后一次commit 起一个 v1.0.100 这样的标签来标识里程碑的意义。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-tag的类型\"><a href=\"#1-2-tag的类型\" class=\"headerlink\" title=\"1.2 tag的类型\"></a>1.2 tag的类型</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">有两种类型的标签 ： 轻量标签（lightweight）、附注标签(annotated)</span><br><span class=\"line\"></span><br><span class=\"line\">【轻量标签 】： 只是某个commit 的引用，可以理解为是一个commit的别名；</span><br><span class=\"line\"></span><br><span class=\"line\">【附注标签】 ：是存储在git仓库中的一个完整对象，包含打标签者的名字、电子邮件地址、日期时间 以及其他的标签信息。</span><br><span class=\"line\">         它是可以被校验的，可以使用 GNU Privacy Guard (GPG) 签名并验证。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-1-查看标签\"><a href=\"#2-1-查看标签\" class=\"headerlink\" title=\"2.1 查看标签\"></a>2.1 查看标签</h2><h3 id=\"2-1-1-查看标签列表\"><a href=\"#2-1-1-查看标签列表\" class=\"headerlink\" title=\"2.1.1 查看标签列表\"></a>2.1.1 查看标签列表</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag</span><br><span class=\"line\">or </span><br><span class=\"line\">$ git tag -l [标签名称筛选字符串*] 或者 git tag --list [标签名称筛选字符串*]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git tag</code> : 直接列出所有的标签<br><code>git tag -l xxxx</code> : 可以根据 xxxx 进行标签的筛选</p>\n</blockquote>\n<h3 id=\"2-1-2-查看标签的提交信息\"><a href=\"#2-1-2-查看标签的提交信息\" class=\"headerlink\" title=\"2.1.2 查看标签的提交信息\"></a>2.1.2 查看标签的提交信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git show 标签名</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>git show 标签名 </code>： 查看标签的信息，（轻量标签 和 附注标签 的信息是不一样的）</p>\n</blockquote>\n<h2 id=\"2-2-创建标签\"><a href=\"#2-2-创建标签\" class=\"headerlink\" title=\"2.2 创建标签\"></a>2.2 创建标签</h2><h3 id=\"2-2-1-创建轻量标签\"><a href=\"#2-2-1-创建轻量标签\" class=\"headerlink\" title=\"2.2.1 创建轻量标签\"></a>2.2.1 创建轻量标签</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag 标签名</span><br><span class=\"line\">or </span><br><span class=\"line\">$ git tag 标签名 提交版本</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git tag 标签名</code> ： 直接给当前的提交版本创建一个【轻量标签】<br><code>git tag 标签名 提交版本号</code> ：给指定的提交版本创建一个 【轻量标签】</p>\n</blockquote>\n<h3 id=\"2-2-2-创建附注标签\"><a href=\"#2-2-2-创建附注标签\" class=\"headerlink\" title=\"2.2.2 创建附注标签\"></a>2.2.2 创建附注标签</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag -a 标签名称 -m 附注信息</span><br><span class=\"line\">or</span><br><span class=\"line\">$ git tag -a 标签名称 提交版本号 -m 附注信息</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明：<br>-a : 理解为 annotated 的首字符，表示 附注标签<br>-m : 指定附注信息<br>git tag -a 标签名称 -m 附注信息 ：直接给当前的提交版本创建一个 【附注标签】<br>git tag -a 标签名称 提交版本号 -m 附注信息 ：给指定的提交版本创建一个【附注标签】</p>\n</blockquote>\n<h2 id=\"2-3-删除标签\"><a href=\"#2-3-删除标签\" class=\"headerlink\" title=\"2.3 删除标签\"></a>2.3 删除标签</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag -d 标签名称</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git tag -d 标签名称</code> : 删除指定名称的标签</p>\n</blockquote>\n<h2 id=\"3-1-推送到远程仓库\"><a href=\"#3-1-推送到远程仓库\" class=\"headerlink\" title=\"3.1 推送到远程仓库\"></a>3.1 推送到远程仓库</h2><blockquote>\n<p>默认情况下，<code>git push </code>命令并不会把标签推送到远程仓库中。<br>因此，我们必须 <code>手动</code>地将 本地的标签 推送到远程仓库中。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin 标签名称</span><br><span class=\"line\">or</span><br><span class=\"line\">$ git push origin --tags</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git push origin 标签名称</code> : 将指定的标签上传到远程仓库<br><code>git push origin --tags</code> : 将所有不在远程仓库中的标签上传到远程仓库</p>\n</blockquote>\n<h2 id=\"3-2-删除远程仓库的标签\"><a href=\"#3-2-删除远程仓库的标签\" class=\"headerlink\" title=\"3.2 删除远程仓库的标签\"></a>3.2 删除远程仓库的标签</h2><blockquote>\n<p>删除远程仓库上地标签同样也需要手动执行。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin  :regs/tags/标签名称</span><br><span class=\"line\">or</span><br><span class=\"line\">$ git push origin --delete 标签名称</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br>上面两个命令都是删除远程仓库中的 指定标签</p>\n</blockquote>\n<h1 id=\"4-检出标签\"><a href=\"#4-检出标签\" class=\"headerlink\" title=\"4.检出标签\"></a>4.检出标签</h1><blockquote>\n<p>检出标签的理解 ： 我想在这个标签的基础上进行其他的开发或操作。<br>检出标签的操作实质 ： 就是以标签指定的版本为基础版本，新建一个分支，继续其他的操作。<br>因此 ，就是 新建分支的操作了。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b 分支名称 标签名称</span><br></pre></td></tr></table></figure>\n\n","more":"<h1 id=\"1-什么是tag\"><a href=\"#1-什么是tag\" class=\"headerlink\" title=\"1.什么是tag\"></a>1.什么是tag</h1><h2 id=\"1-1-tag的简单理解\"><a href=\"#1-1-tag的简单理解\" class=\"headerlink\" title=\"1.1 tag的简单理解\"></a>1.1 tag的简单理解</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tag 中文我们可以称它为 标签。</span><br><span class=\"line\"></span><br><span class=\"line\">简单的理解，tag 就是 对某次 commit 的一个标识，相当于起了一个别名。</span><br><span class=\"line\">例如，在项目发布某个版本的时候，针对最后一次commit 起一个 v1.0.100 这样的标签来标识里程碑的意义。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-2-tag的类型\"><a href=\"#1-2-tag的类型\" class=\"headerlink\" title=\"1.2 tag的类型\"></a>1.2 tag的类型</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">有两种类型的标签 ： 轻量标签（lightweight）、附注标签(annotated)</span><br><span class=\"line\"></span><br><span class=\"line\">【轻量标签 】： 只是某个commit 的引用，可以理解为是一个commit的别名；</span><br><span class=\"line\"></span><br><span class=\"line\">【附注标签】 ：是存储在git仓库中的一个完整对象，包含打标签者的名字、电子邮件地址、日期时间 以及其他的标签信息。</span><br><span class=\"line\">         它是可以被校验的，可以使用 GNU Privacy Guard (GPG) 签名并验证。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-1-查看标签\"><a href=\"#2-1-查看标签\" class=\"headerlink\" title=\"2.1 查看标签\"></a>2.1 查看标签</h2><h3 id=\"2-1-1-查看标签列表\"><a href=\"#2-1-1-查看标签列表\" class=\"headerlink\" title=\"2.1.1 查看标签列表\"></a>2.1.1 查看标签列表</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag</span><br><span class=\"line\">or </span><br><span class=\"line\">$ git tag -l [标签名称筛选字符串*] 或者 git tag --list [标签名称筛选字符串*]</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git tag</code> : 直接列出所有的标签<br><code>git tag -l xxxx</code> : 可以根据 xxxx 进行标签的筛选</p>\n</blockquote>\n<h3 id=\"2-1-2-查看标签的提交信息\"><a href=\"#2-1-2-查看标签的提交信息\" class=\"headerlink\" title=\"2.1.2 查看标签的提交信息\"></a>2.1.2 查看标签的提交信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git show 标签名</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>git show 标签名 </code>： 查看标签的信息，（轻量标签 和 附注标签 的信息是不一样的）</p>\n</blockquote>\n<h2 id=\"2-2-创建标签\"><a href=\"#2-2-创建标签\" class=\"headerlink\" title=\"2.2 创建标签\"></a>2.2 创建标签</h2><h3 id=\"2-2-1-创建轻量标签\"><a href=\"#2-2-1-创建轻量标签\" class=\"headerlink\" title=\"2.2.1 创建轻量标签\"></a>2.2.1 创建轻量标签</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag 标签名</span><br><span class=\"line\">or </span><br><span class=\"line\">$ git tag 标签名 提交版本</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git tag 标签名</code> ： 直接给当前的提交版本创建一个【轻量标签】<br><code>git tag 标签名 提交版本号</code> ：给指定的提交版本创建一个 【轻量标签】</p>\n</blockquote>\n<h3 id=\"2-2-2-创建附注标签\"><a href=\"#2-2-2-创建附注标签\" class=\"headerlink\" title=\"2.2.2 创建附注标签\"></a>2.2.2 创建附注标签</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag -a 标签名称 -m 附注信息</span><br><span class=\"line\">or</span><br><span class=\"line\">$ git tag -a 标签名称 提交版本号 -m 附注信息</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明：<br>-a : 理解为 annotated 的首字符，表示 附注标签<br>-m : 指定附注信息<br>git tag -a 标签名称 -m 附注信息 ：直接给当前的提交版本创建一个 【附注标签】<br>git tag -a 标签名称 提交版本号 -m 附注信息 ：给指定的提交版本创建一个【附注标签】</p>\n</blockquote>\n<h2 id=\"2-3-删除标签\"><a href=\"#2-3-删除标签\" class=\"headerlink\" title=\"2.3 删除标签\"></a>2.3 删除标签</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git tag -d 标签名称</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git tag -d 标签名称</code> : 删除指定名称的标签</p>\n</blockquote>\n<h2 id=\"3-1-推送到远程仓库\"><a href=\"#3-1-推送到远程仓库\" class=\"headerlink\" title=\"3.1 推送到远程仓库\"></a>3.1 推送到远程仓库</h2><blockquote>\n<p>默认情况下，<code>git push </code>命令并不会把标签推送到远程仓库中。<br>因此，我们必须 <code>手动</code>地将 本地的标签 推送到远程仓库中。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin 标签名称</span><br><span class=\"line\">or</span><br><span class=\"line\">$ git push origin --tags</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br><code>git push origin 标签名称</code> : 将指定的标签上传到远程仓库<br><code>git push origin --tags</code> : 将所有不在远程仓库中的标签上传到远程仓库</p>\n</blockquote>\n<h2 id=\"3-2-删除远程仓库的标签\"><a href=\"#3-2-删除远程仓库的标签\" class=\"headerlink\" title=\"3.2 删除远程仓库的标签\"></a>3.2 删除远程仓库的标签</h2><blockquote>\n<p>删除远程仓库上地标签同样也需要手动执行。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git push origin  :regs/tags/标签名称</span><br><span class=\"line\">or</span><br><span class=\"line\">$ git push origin --delete 标签名称</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>说明 ：<br>上面两个命令都是删除远程仓库中的 指定标签</p>\n</blockquote>\n<h1 id=\"4-检出标签\"><a href=\"#4-检出标签\" class=\"headerlink\" title=\"4.检出标签\"></a>4.检出标签</h1><blockquote>\n<p>检出标签的理解 ： 我想在这个标签的基础上进行其他的开发或操作。<br>检出标签的操作实质 ： 就是以标签指定的版本为基础版本，新建一个分支，继续其他的操作。<br>因此 ，就是 新建分支的操作了。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git checkout -b 分支名称 标签名称</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"Git","path":"api/categories/Git.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}