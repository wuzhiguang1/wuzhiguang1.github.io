{"title":"mock.js语法规范","slug":"152","date":"2021-09-25T09:25:53.000Z","updated":"2021-12-11T04:14:47.000Z","comments":true,"path":"api/articles/152.json","excerpt":null,"covers":null,"content":"<h2 id=\"语法规范\"><a href=\"#语法规范\" class=\"headerlink\" title=\"语法规范\"></a>语法规范</h2><h3 id=\"数据模板定义规范-DTD\"><a href=\"#数据模板定义规范-DTD\" class=\"headerlink\" title=\"数据模板定义规范 DTD\"></a>数据模板定义规范 DTD</h3><p>数据模板中的每个属性由 3 部分构成：属性名、生成规则、属性值：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 属性名   name</span></span><br><span class=\"line\"><span class=\"comment\">// 生成规则 rule</span></span><br><span class=\"line\"><span class=\"comment\">// 属性值   value</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|rule&#x27;</span>: <span class=\"keyword\">value</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h4><ul>\n<li>属性名 和 生成规则 之间用竖线 | 分隔。</li>\n<li>生成规则 是可选的。</li>\n<li>生成规则 有 7 种格式：</li>\n</ul>\n<blockquote>\n<p>‘name|min-max’: value<br> ‘name|count’: value<br> ‘name|min-max.dmin-dmax’: value<br> ‘name|min-max.dcount’: value<br> ‘name|count.dmin-dmax’: value<br> ‘name|count.dcount’: value<br> ‘name|+step’: value</p>\n</blockquote>\n<ul>\n<li><h5 id=\"生成规则-的-含义-需要依赖-属性值的类型-才能确定。\"><a href=\"#生成规则-的-含义-需要依赖-属性值的类型-才能确定。\" class=\"headerlink\" title=\"生成规则 的 含义 需要依赖 属性值的类型 才能确定。\"></a>生成规则 的 含义 需要依赖 属性值的类型 才能确定。</h5></li>\n<li><p>属性值 中可以含有 @占位符。</p>\n</li>\n<li><p>属性值 还指定了最终值的初始值和类型。</p>\n</li>\n</ul>\n<h3 id=\"生成规则和示例：\"><a href=\"#生成规则和示例：\" class=\"headerlink\" title=\"生成规则和示例：\"></a>生成规则和示例：</h3><h4 id=\"1-属性值是字符串-String\"><a href=\"#1-属性值是字符串-String\" class=\"headerlink\" title=\"1. 属性值是字符串 String\"></a>1. 属性值是字符串 String</h4><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//通过重复 string 生成一个字符串，重复次数大于等于 min，小于等于 max。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">通过重复 <span class=\"built_in\">string</span> 生成一个字符串，重复次数等于 count。</span><br><span class=\"line\"><span class=\"string\">&#x27;name|count&#x27;</span>: <span class=\"built_in\">string</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-属性值是数字-Number\"><a href=\"#2-属性值是数字-Number\" class=\"headerlink\" title=\"2. 属性值是数字 Number\"></a>2. 属性值是数字 Number</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//属性值自动加 1，初始值为 number。</span><br><span class=\"line\">&#x27;name|+1&#x27;: number</span><br><span class=\"line\"></span><br><span class=\"line\">//生成一个大于等于 min、小于等于 max 的整数，属性值 number 只是用来确定类型。</span><br><span class=\"line\">&#x27;name|min-max&#x27;: number</span><br><span class=\"line\"></span><br><span class=\"line\">//生成一个浮点数，整数部分大于等于 min、小于等于 max，小数部分保留 dmin 到 dmax 位。</span><br><span class=\"line\">&#x27;name|min-max.dmin-dmax&#x27;: number</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;number1|1-100.1-10&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;number2|123.1-10&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;number3|123.3&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;number4|123.10&#x27;</span>: <span class=\"number\">1.123</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;number1&quot;</span>: <span class=\"number\">12.92</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;number2&quot;</span>: <span class=\"number\">123.51</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;number3&quot;</span>: <span class=\"number\">123.777</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;number4&quot;</span>: <span class=\"number\">123.1231091814</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-属性值是布尔型-Boolean\"><a href=\"#3-属性值是布尔型-Boolean\" class=\"headerlink\" title=\"3. 属性值是布尔型 Boolean\"></a>3. 属性值是布尔型 Boolean</h4><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//随机生成一个布尔值，值为 true 的概率是 1/2，值为 false 的概率同样是 1/2。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|1&#x27;</span>: boolean</span><br><span class=\"line\"><span class=\"comment\">//随机生成一个布尔值，值为 value 的概率是 min / (min + max)，值为 !value 的概率是 max / (min + max)。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"keyword\">value</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-属性值是对象-Object\"><a href=\"#4-属性值是对象-Object\" class=\"headerlink\" title=\"4. 属性值是对象 Object\"></a>4. 属性值是对象 Object</h4><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从属性值 object 中随机选取 count 个属性。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|count&#x27;</span>: <span class=\"built_in\">object</span></span><br><span class=\"line\"><span class=\"comment\">//从属性值 object 中随机选取 min 到 max 个属性。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"built_in\">object</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-属性值是数组-Array\"><a href=\"#5-属性值是数组-Array\" class=\"headerlink\" title=\"5. 属性值是数组 Array\"></a>5. 属性值是数组 Array</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从属性值 array 中随机选取 1 个元素，作为最终值。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|1&#x27;</span>: <span class=\"keyword\">array</span></span><br><span class=\"line\"><span class=\"comment\">//从属性值 array 中顺序选取 1 个元素，作为最终值。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|+1&#x27;</span>: <span class=\"keyword\">array</span></span><br><span class=\"line\"><span class=\"comment\">//通过重复属性值 array 生成一个新数组，重复次数大于等于 min，小于等于 max。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"keyword\">array</span></span><br><span class=\"line\"><span class=\"comment\">//通过重复属性值 array 生成一个新数组，重复次数为 count。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|count&#x27;</span>: <span class=\"keyword\">array</span></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(<span class=\"regexp\">/api\\/test/</span>, &#123;</span><br><span class=\"line\">    <span class=\"comment\">//通过重复属性值 array 生成一个新数组，重复次数为 1-3次。</span></span><br><span class=\"line\">    <span class=\"string\">&quot;favorite_games|1-3&quot;</span>: [<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">23</span>,<span class=\"number\">28</span>,<span class=\"number\">42</span>,<span class=\"number\">45</span>],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-属性值是函数-Function\"><a href=\"#6-属性值是函数-Function\" class=\"headerlink\" title=\"6. 属性值是函数 Function\"></a>6. 属性值是函数 Function</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行函数 <span class=\"keyword\">function</span>，取其返回值作为最终的属性值，函数的上下文为属性 <span class=\"string\">&#x27;name&#x27;</span> 所在的对象。</span><br><span class=\"line\"><span class=\"string\">&#x27;name&#x27;</span>: <span class=\"keyword\">function</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-属性值是正则表达式-RegExp\"><a href=\"#7-属性值是正则表达式-RegExp\" class=\"headerlink\" title=\"7. 属性值是正则表达式 RegExp\"></a>7. 属性值是正则表达式 RegExp</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">根据正则表达式 regexp 反向生成可以匹配它的字符串。用于生成自定义格式的字符串。</span><br><span class=\"line\"><span class=\"string\">&#x27;name&#x27;</span>: regexp</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;regexp1&#x27;</span>: <span class=\"regexp\">/[a-z][A-Z][0-9]/</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;regexp2&#x27;</span>: <span class=\"regexp\">/\\w\\W\\s\\S\\d\\D/</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;regexp3&#x27;</span>: <span class=\"regexp\">/\\d&#123;5,10&#125;/</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;regexp1&quot;</span>: <span class=\"string\">&quot;pJ7&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;regexp2&quot;</span>: <span class=\"string\">&quot;F)\\fp1G&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;regexp3&quot;</span>: <span class=\"string\">&quot;561659409&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据占位符定义规范-DPD\"><a href=\"#数据占位符定义规范-DPD\" class=\"headerlink\" title=\"数据占位符定义规范 DPD\"></a>数据占位符定义规范 DPD</h2><p>占位符 只是在属性值字符串中占个位置，并不出现在最终的属性值中。</p>\n<p>占位符 的格式为：</p>\n<p>@占位符<br> @占位符(参数 [, 参数])<br> 注意：</p>\n<p>用 @ 来标识其后的字符串是 占位符。<br> 占位符 引用的是 Mock.Random 中的方法。<br> 通过 Mock.Random.extend() 来扩展自定义占位符。<br> 占位符 也可以引用 数据模板 中的属性。<br> 占位符 会优先引用 数据模板 中的属性。<br> 占位符 支持 相对路径 和 绝对路径。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(&#123;</span><br><span class=\"line\">    name: &#123;</span><br><span class=\"line\">        first: <span class=\"string\">&#x27;@FIRST&#x27;</span>,</span><br><span class=\"line\">        middle: <span class=\"string\">&#x27;@FIRST&#x27;</span>,</span><br><span class=\"line\">        last: <span class=\"string\">&#x27;@LAST&#x27;</span>,</span><br><span class=\"line\">        full: <span class=\"string\">&#x27;@first @middle @last&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;first&quot;</span>: <span class=\"string\">&quot;Charles&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;middle&quot;</span>: <span class=\"string\">&quot;Brenda&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;last&quot;</span>: <span class=\"string\">&quot;Lopez&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;full&quot;</span>: <span class=\"string\">&quot;Charles Brenda Lopez&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入mockjs</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Random = Mock.Random;</span><br><span class=\"line\"><span class=\"comment\">//使用mockjs模拟数据</span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;/api/msdk/proxy/query_common_credit&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;ret&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;data&quot;</span>:</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;mtime&quot;</span>: <span class=\"string\">&quot;@datetime&quot;</span>,<span class=\"comment\">//随机生成日期时间</span></span><br><span class=\"line\">        <span class=\"string\">&quot;score&quot;</span>:  <span class=\"string\">&quot;@natural(1, 800)&quot;</span>,<span class=\"comment\">//随机生成1-800的数字</span></span><br><span class=\"line\">        <span class=\"string\">&quot;rank&quot;</span>:  <span class=\"string\">&quot;@natural(1, 100)&quot;</span>,<span class=\"comment\">//随机生成1-100的数字</span></span><br><span class=\"line\">        <span class=\"string\">&quot;stars&quot;</span>: <span class=\"string\">&quot;@natural(0, 5)&quot;</span>,<span class=\"comment\">//随机生成1-5的数字</span></span><br><span class=\"line\">        <span class=\"string\">&quot;nickname&quot;</span>: <span class=\"string\">&quot;@cname&quot;</span>,<span class=\"comment\">//随机生成中文名字</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>get请求有带参数时，请把接口url写为正则匹配，否则匹配不到就报错（Mock.mock(‘此处为正则’）</p>\n<p>作者：清汤饺子<br>链接：<a href=\"https://www.jianshu.com/p/4579f40e6108\">https://www.jianshu.com/p/4579f40e6108</a></p>\n","more":"<h2 id=\"语法规范\"><a href=\"#语法规范\" class=\"headerlink\" title=\"语法规范\"></a>语法规范</h2><h3 id=\"数据模板定义规范-DTD\"><a href=\"#数据模板定义规范-DTD\" class=\"headerlink\" title=\"数据模板定义规范 DTD\"></a>数据模板定义规范 DTD</h3><p>数据模板中的每个属性由 3 部分构成：属性名、生成规则、属性值：</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 属性名   name</span></span><br><span class=\"line\"><span class=\"comment\">// 生成规则 rule</span></span><br><span class=\"line\"><span class=\"comment\">// 属性值   value</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|rule&#x27;</span>: <span class=\"keyword\">value</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h4><ul>\n<li>属性名 和 生成规则 之间用竖线 | 分隔。</li>\n<li>生成规则 是可选的。</li>\n<li>生成规则 有 7 种格式：</li>\n</ul>\n<blockquote>\n<p>‘name|min-max’: value<br> ‘name|count’: value<br> ‘name|min-max.dmin-dmax’: value<br> ‘name|min-max.dcount’: value<br> ‘name|count.dmin-dmax’: value<br> ‘name|count.dcount’: value<br> ‘name|+step’: value</p>\n</blockquote>\n<ul>\n<li><h5 id=\"生成规则-的-含义-需要依赖-属性值的类型-才能确定。\"><a href=\"#生成规则-的-含义-需要依赖-属性值的类型-才能确定。\" class=\"headerlink\" title=\"生成规则 的 含义 需要依赖 属性值的类型 才能确定。\"></a>生成规则 的 含义 需要依赖 属性值的类型 才能确定。</h5></li>\n<li><p>属性值 中可以含有 @占位符。</p>\n</li>\n<li><p>属性值 还指定了最终值的初始值和类型。</p>\n</li>\n</ul>\n<h3 id=\"生成规则和示例：\"><a href=\"#生成规则和示例：\" class=\"headerlink\" title=\"生成规则和示例：\"></a>生成规则和示例：</h3><h4 id=\"1-属性值是字符串-String\"><a href=\"#1-属性值是字符串-String\" class=\"headerlink\" title=\"1. 属性值是字符串 String\"></a>1. 属性值是字符串 String</h4><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//通过重复 string 生成一个字符串，重复次数大于等于 min，小于等于 max。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"built_in\">string</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">通过重复 <span class=\"built_in\">string</span> 生成一个字符串，重复次数等于 count。</span><br><span class=\"line\"><span class=\"string\">&#x27;name|count&#x27;</span>: <span class=\"built_in\">string</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"2-属性值是数字-Number\"><a href=\"#2-属性值是数字-Number\" class=\"headerlink\" title=\"2. 属性值是数字 Number\"></a>2. 属性值是数字 Number</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//属性值自动加 1，初始值为 number。</span><br><span class=\"line\">&#x27;name|+1&#x27;: number</span><br><span class=\"line\"></span><br><span class=\"line\">//生成一个大于等于 min、小于等于 max 的整数，属性值 number 只是用来确定类型。</span><br><span class=\"line\">&#x27;name|min-max&#x27;: number</span><br><span class=\"line\"></span><br><span class=\"line\">//生成一个浮点数，整数部分大于等于 min、小于等于 max，小数部分保留 dmin 到 dmax 位。</span><br><span class=\"line\">&#x27;name|min-max.dmin-dmax&#x27;: number</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;number1|1-100.1-10&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;number2|123.1-10&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;number3|123.3&#x27;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;number4|123.10&#x27;</span>: <span class=\"number\">1.123</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;number1&quot;</span>: <span class=\"number\">12.92</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;number2&quot;</span>: <span class=\"number\">123.51</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;number3&quot;</span>: <span class=\"number\">123.777</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;number4&quot;</span>: <span class=\"number\">123.1231091814</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-属性值是布尔型-Boolean\"><a href=\"#3-属性值是布尔型-Boolean\" class=\"headerlink\" title=\"3. 属性值是布尔型 Boolean\"></a>3. 属性值是布尔型 Boolean</h4><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//随机生成一个布尔值，值为 true 的概率是 1/2，值为 false 的概率同样是 1/2。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|1&#x27;</span>: boolean</span><br><span class=\"line\"><span class=\"comment\">//随机生成一个布尔值，值为 value 的概率是 min / (min + max)，值为 !value 的概率是 max / (min + max)。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"keyword\">value</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"4-属性值是对象-Object\"><a href=\"#4-属性值是对象-Object\" class=\"headerlink\" title=\"4. 属性值是对象 Object\"></a>4. 属性值是对象 Object</h4><figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从属性值 object 中随机选取 count 个属性。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|count&#x27;</span>: <span class=\"built_in\">object</span></span><br><span class=\"line\"><span class=\"comment\">//从属性值 object 中随机选取 min 到 max 个属性。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"built_in\">object</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"5-属性值是数组-Array\"><a href=\"#5-属性值是数组-Array\" class=\"headerlink\" title=\"5. 属性值是数组 Array\"></a>5. 属性值是数组 Array</h4><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//从属性值 array 中随机选取 1 个元素，作为最终值。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|1&#x27;</span>: <span class=\"keyword\">array</span></span><br><span class=\"line\"><span class=\"comment\">//从属性值 array 中顺序选取 1 个元素，作为最终值。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|+1&#x27;</span>: <span class=\"keyword\">array</span></span><br><span class=\"line\"><span class=\"comment\">//通过重复属性值 array 生成一个新数组，重复次数大于等于 min，小于等于 max。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|min-max&#x27;</span>: <span class=\"keyword\">array</span></span><br><span class=\"line\"><span class=\"comment\">//通过重复属性值 array 生成一个新数组，重复次数为 count。</span></span><br><span class=\"line\"><span class=\"string\">&#x27;name|count&#x27;</span>: <span class=\"keyword\">array</span></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(<span class=\"regexp\">/api\\/test/</span>, &#123;</span><br><span class=\"line\">    <span class=\"comment\">//通过重复属性值 array 生成一个新数组，重复次数为 1-3次。</span></span><br><span class=\"line\">    <span class=\"string\">&quot;favorite_games|1-3&quot;</span>: [<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">23</span>,<span class=\"number\">28</span>,<span class=\"number\">42</span>,<span class=\"number\">45</span>],</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"6-属性值是函数-Function\"><a href=\"#6-属性值是函数-Function\" class=\"headerlink\" title=\"6. 属性值是函数 Function\"></a>6. 属性值是函数 Function</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">执行函数 <span class=\"keyword\">function</span>，取其返回值作为最终的属性值，函数的上下文为属性 <span class=\"string\">&#x27;name&#x27;</span> 所在的对象。</span><br><span class=\"line\"><span class=\"string\">&#x27;name&#x27;</span>: <span class=\"keyword\">function</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"7-属性值是正则表达式-RegExp\"><a href=\"#7-属性值是正则表达式-RegExp\" class=\"headerlink\" title=\"7. 属性值是正则表达式 RegExp\"></a>7. 属性值是正则表达式 RegExp</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">根据正则表达式 regexp 反向生成可以匹配它的字符串。用于生成自定义格式的字符串。</span><br><span class=\"line\"><span class=\"string\">&#x27;name&#x27;</span>: regexp</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(&#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;regexp1&#x27;</span>: <span class=\"regexp\">/[a-z][A-Z][0-9]/</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;regexp2&#x27;</span>: <span class=\"regexp\">/\\w\\W\\s\\S\\d\\D/</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;regexp3&#x27;</span>: <span class=\"regexp\">/\\d&#123;5,10&#125;/</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;regexp1&quot;</span>: <span class=\"string\">&quot;pJ7&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;regexp2&quot;</span>: <span class=\"string\">&quot;F)\\fp1G&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;regexp3&quot;</span>: <span class=\"string\">&quot;561659409&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据占位符定义规范-DPD\"><a href=\"#数据占位符定义规范-DPD\" class=\"headerlink\" title=\"数据占位符定义规范 DPD\"></a>数据占位符定义规范 DPD</h2><p>占位符 只是在属性值字符串中占个位置，并不出现在最终的属性值中。</p>\n<p>占位符 的格式为：</p>\n<p>@占位符<br> @占位符(参数 [, 参数])<br> 注意：</p>\n<p>用 @ 来标识其后的字符串是 占位符。<br> 占位符 引用的是 Mock.Random 中的方法。<br> 通过 Mock.Random.extend() 来扩展自定义占位符。<br> 占位符 也可以引用 数据模板 中的属性。<br> 占位符 会优先引用 数据模板 中的属性。<br> 占位符 支持 相对路径 和 绝对路径。</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mock.mock(&#123;</span><br><span class=\"line\">    name: &#123;</span><br><span class=\"line\">        first: <span class=\"string\">&#x27;@FIRST&#x27;</span>,</span><br><span class=\"line\">        middle: <span class=\"string\">&#x27;@FIRST&#x27;</span>,</span><br><span class=\"line\">        last: <span class=\"string\">&#x27;@LAST&#x27;</span>,</span><br><span class=\"line\">        full: <span class=\"string\">&#x27;@first @middle @last&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"comment\">// =&gt;</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;first&quot;</span>: <span class=\"string\">&quot;Charles&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;middle&quot;</span>: <span class=\"string\">&quot;Brenda&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;last&quot;</span>: <span class=\"string\">&quot;Lopez&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;full&quot;</span>: <span class=\"string\">&quot;Charles Brenda Lopez&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入mockjs</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> Random = Mock.Random;</span><br><span class=\"line\"><span class=\"comment\">//使用mockjs模拟数据</span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">&#x27;/api/msdk/proxy/query_common_credit&#x27;</span>, &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;ret&quot;</span>:<span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;data&quot;</span>:</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;mtime&quot;</span>: <span class=\"string\">&quot;@datetime&quot;</span>,<span class=\"comment\">//随机生成日期时间</span></span><br><span class=\"line\">        <span class=\"string\">&quot;score&quot;</span>:  <span class=\"string\">&quot;@natural(1, 800)&quot;</span>,<span class=\"comment\">//随机生成1-800的数字</span></span><br><span class=\"line\">        <span class=\"string\">&quot;rank&quot;</span>:  <span class=\"string\">&quot;@natural(1, 100)&quot;</span>,<span class=\"comment\">//随机生成1-100的数字</span></span><br><span class=\"line\">        <span class=\"string\">&quot;stars&quot;</span>: <span class=\"string\">&quot;@natural(0, 5)&quot;</span>,<span class=\"comment\">//随机生成1-5的数字</span></span><br><span class=\"line\">        <span class=\"string\">&quot;nickname&quot;</span>: <span class=\"string\">&quot;@cname&quot;</span>,<span class=\"comment\">//随机生成中文名字</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><p>get请求有带参数时，请把接口url写为正则匹配，否则匹配不到就报错（Mock.mock(‘此处为正则’）</p>\n<p>作者：清汤饺子<br>链接：<a href=\"https://www.jianshu.com/p/4579f40e6108\">https://www.jianshu.com/p/4579f40e6108</a></p>\n","categories":[{"name":"Vue","path":"api/categories/Vue.json"}],"tags":[{"name":"vue","path":"api/tags/vue.json"},{"name":"mockjs","path":"api/tags/mockjs.json"}]}