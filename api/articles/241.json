{"title":"js 快速找出两个数组中的不同元素或对象","slug":"241","date":"2022-11-08T03:51:54.000Z","updated":"2022-11-08T03:55:01.248Z","comments":true,"path":"api/articles/241.json","excerpt":null,"covers":null,"content":"<h4 id=\"js-快速找出两个数组中的不同元素\"><a href=\"#js-快速找出两个数组中的不同元素\" class=\"headerlink\" title=\"js 快速找出两个数组中的不同元素\"></a>js 快速找出两个<a href=\"https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84&spm=1001.2101.3001.7020\">数组</a>中的不同元素</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getArrDifference</span>(<span class=\"params\">arr1, arr2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr1.concat(arr2).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v, i, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.indexOf(v) === arr.lastIndexOf(v);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getArrDifference(arr1,arr2));</span><br><span class=\"line\"><span class=\"comment\">// 输出：(4) [2, 5, 6, 9]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>（1）concat() 方法：用于连接两个或多个数组。</code></p>\n<p>该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本，例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1.concat(arr2))；</span><br><span class=\"line\"><span class=\"comment\">// 输出：[0,1,2,1,3,9]</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）Array filter() 方法：<br>创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。<br>注意： filter() 不会对空数组进行检测。<br>注意： filter() 不会改变原始数组。<br>语法：array.filter(function(currentValue,index,arr), thisValue)</p>\n<p>（3）indexOf() 方法：<br>可返回某个指定的字符串值在字符串中首次出现的位置。<br>如果没有找到匹配的字符串则返回 -1。<br>注意： indexOf() 方法区分大小写。</p>\n<p>（4）lastIndexOf() 方法：<br>可返回一个指定的字符串值最后出现的位置，如果指定第二个参数 start，则在一个字符串中的指定位置从后向前搜索。<br>注意： 该方法将从后向前检索字符串，但返回是从起始位置 (0) 开始计算子字符串最后出现的位置。 看它是否含有字符串。<br>开始检索的位置在字符串的 start 处或字符串的结尾（没有指定 start 时）。<br>如果没有找到匹配字符串则返回 -1 。</p>\n<p>注意：lastIndexOf() 方法是区分大小写的！<br>js 快速找出两个数组中的不同对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;145&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;dave&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;jones&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;135&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;mike&quot;</span>,<span class=\"attr\">lastname</span>: <span class=\"string\">&quot;williams&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;148&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;bob&quot;</span>,<span class=\"attr\">lastname</span>: <span class=\"string\">&quot;michaels&quot;</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;146&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;dave&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;jones&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;135&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;mike&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;williams&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;148&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;bob&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;michaels&quot;</span>&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"> newArr1 = arr1.filter(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> !arr2.some(<span class=\"function\"><span class=\"params\">y</span> =&gt;</span> y.id === x.id)),</span><br><span class=\"line\"> newArr2 = arr2.filter(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> !arr1.some(<span class=\"function\"><span class=\"params\">y</span> =&gt;</span> y.id === x.id));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr1)<span class=\"comment\">// [&#123;id: &#x27;145&#x27;, firstname: &#x27;dave&#x27;, lastname: &#x27;jones&#x27;&#125;]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr2)<span class=\"comment\">// [&#123;id: &#x27;146&#x27;, firstname: &#x27;dave&#x27;, lastname: &#x27;jones&#x27;&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p>1）Array filter() 方法：<br>创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。<br>注意： filter() 不会对空数组进行检测。<br>注意： filter() 不会改变原始数组。<br>语法：array.filter(function(currentValue,index,arr),thisValue)</p>\n<p>（2）Array some() 方法：<br>用于检测数组中的元素是否满足指定条件（函数提供）。<br>some() 方法会依次执行数组的每个元素：<br>如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测。<br>如果没有满足条件的元素，则返回false。<br>注意： some() 不会对空数组进行检测。<br>注意： some() 不会改变原始数组。<br>语法：array.some(function(currentValue,index,arr),thisValue)</p>\n","more":"<h4 id=\"js-快速找出两个数组中的不同元素\"><a href=\"#js-快速找出两个数组中的不同元素\" class=\"headerlink\" title=\"js 快速找出两个数组中的不同元素\"></a>js 快速找出两个<a href=\"https://so.csdn.net/so/search?q=%E6%95%B0%E7%BB%84&spm=1001.2101.3001.7020\">数组</a>中的不同元素</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"number\">0</span>,<span class=\"number\">4</span>,<span class=\"number\">6</span>,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getArrDifference</span>(<span class=\"params\">arr1, arr2</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr1.concat(arr2).filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">v, i, arr</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr.indexOf(v) === arr.lastIndexOf(v);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(getArrDifference(arr1,arr2));</span><br><span class=\"line\"><span class=\"comment\">// 输出：(4) [2, 5, 6, 9]</span></span><br></pre></td></tr></table></figure>\n\n<p><code>（1）concat() 方法：用于连接两个或多个数组。</code></p>\n<p>该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本，例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> arr1 = [<span class=\"number\">0</span>,<span class=\"number\">1</span>,<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr2 = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1.concat(arr2))；</span><br><span class=\"line\"><span class=\"comment\">// 输出：[0,1,2,1,3,9]</span></span><br></pre></td></tr></table></figure>\n\n<p>（2）Array filter() 方法：<br>创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。<br>注意： filter() 不会对空数组进行检测。<br>注意： filter() 不会改变原始数组。<br>语法：array.filter(function(currentValue,index,arr), thisValue)</p>\n<p>（3）indexOf() 方法：<br>可返回某个指定的字符串值在字符串中首次出现的位置。<br>如果没有找到匹配的字符串则返回 -1。<br>注意： indexOf() 方法区分大小写。</p>\n<p>（4）lastIndexOf() 方法：<br>可返回一个指定的字符串值最后出现的位置，如果指定第二个参数 start，则在一个字符串中的指定位置从后向前搜索。<br>注意： 该方法将从后向前检索字符串，但返回是从起始位置 (0) 开始计算子字符串最后出现的位置。 看它是否含有字符串。<br>开始检索的位置在字符串的 start 处或字符串的结尾（没有指定 start 时）。<br>如果没有找到匹配字符串则返回 -1 。</p>\n<p>注意：lastIndexOf() 方法是区分大小写的！<br>js 快速找出两个数组中的不同对象</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr1 = [</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;145&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;dave&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;jones&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;135&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;mike&quot;</span>,<span class=\"attr\">lastname</span>: <span class=\"string\">&quot;williams&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;148&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;bob&quot;</span>,<span class=\"attr\">lastname</span>: <span class=\"string\">&quot;michaels&quot;</span>&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">const</span> arr2 = [</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;146&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;dave&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;jones&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;135&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;mike&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;williams&quot;</span>&#125;,</span><br><span class=\"line\">\t&#123;<span class=\"attr\">id</span>: <span class=\"string\">&quot;148&quot;</span>, <span class=\"attr\">firstname</span>: <span class=\"string\">&quot;bob&quot;</span>, <span class=\"attr\">lastname</span>: <span class=\"string\">&quot;michaels&quot;</span>&#125;</span><br><span class=\"line\">],</span><br><span class=\"line\"> newArr1 = arr1.filter(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> !arr2.some(<span class=\"function\"><span class=\"params\">y</span> =&gt;</span> y.id === x.id)),</span><br><span class=\"line\"> newArr2 = arr2.filter(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> !arr1.some(<span class=\"function\"><span class=\"params\">y</span> =&gt;</span> y.id === x.id));</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr1)<span class=\"comment\">// [&#123;id: &#x27;145&#x27;, firstname: &#x27;dave&#x27;, lastname: &#x27;jones&#x27;&#125;]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(newArr2)<span class=\"comment\">// [&#123;id: &#x27;146&#x27;, firstname: &#x27;dave&#x27;, lastname: &#x27;jones&#x27;&#125;]</span></span><br></pre></td></tr></table></figure>\n\n<p>1）Array filter() 方法：<br>创建一个新的数组，新数组中的元素是通过检查指定数组中符合条件的所有元素。<br>注意： filter() 不会对空数组进行检测。<br>注意： filter() 不会改变原始数组。<br>语法：array.filter(function(currentValue,index,arr),thisValue)</p>\n<p>（2）Array some() 方法：<br>用于检测数组中的元素是否满足指定条件（函数提供）。<br>some() 方法会依次执行数组的每个元素：<br>如果有一个元素满足条件，则表达式返回true , 剩余的元素不会再执行检测。<br>如果没有满足条件的元素，则返回false。<br>注意： some() 不会对空数组进行检测。<br>注意： some() 不会改变原始数组。<br>语法：array.some(function(currentValue,index,arr),thisValue)</p>\n","categories":[{"name":"JavaScript","path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","path":"api/tags/JavaScript.json"}]}