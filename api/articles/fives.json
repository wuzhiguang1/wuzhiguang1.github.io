{"title":"JavaScript中基本数据类型和引用数据类型的区别？","slug":"fives","date":"2020-04-11T14:44:43.000Z","updated":"2022-07-29T04:22:04.754Z","comments":true,"path":"api/articles/fives.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/75d8967b261c491bae60a5efba8c52e1.jpg","https://img-blog.csdnimg.cn/20200411213852525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/2020041121541617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/20200411215718841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/20200411220621872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70","https://img-blog.csdnimg.cn/20200411222754350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70"],"content":"<p><img src=\"https://qny.aqingya.cn/img/75d8967b261c491bae60a5efba8c52e1.jpg\"></p>\n<span id=\"more\"></span>\n\n<p>&nbsp;&nbsp;&nbsp;&nbsp;基本类型：String、Number、Boolean、Null、Undefined<br>&nbsp;&nbsp;&nbsp;&nbsp;应用数据类型：Object<br>他们有什么区别呢？<br><br><br>&nbsp;&nbsp;我们先看一个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a++;                         修改a的值</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;a=&quot;</span> + a);      <span class=\"comment\">//a=11</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;b=&quot;</span> + b);      <span class=\"comment\">//b=10</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;我们发现a的值发生了改变，但是b的值并没有发生改变。这是就说明a和b是完全独立的，一个值的改变不会影响其他值。<br><br><br>&nbsp;&nbsp;我们再看一个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">      obj1.name = <span class=\"string\">&quot;阿清&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> obj2 = obj1;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj1.name);\t\t<span class=\"comment\">// 阿清</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj2.name); \t<span class=\"comment\">// 阿清</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改obj1对象中name中的值</span></span><br><span class=\"line\">\tobj1.name = <span class=\"string\">&quot;大大怪将军&quot;</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj1.name); \t<span class=\"comment\">// 大大怪将军</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj2.name); \t<span class=\"comment\">// 大大怪将军</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;修改之前输出了相同的结果，但是修改之后还是输出相同的结果，我们只是修改了obj1中name的值，并没有修改obj2中name的值，此时输出还是相同的。这是为什么呢？<br>&nbsp;&nbsp;&nbsp;&nbsp;这就是基本数据类型和引用数据类型的区别。为了方便说明，我们画一个图。</p>\n<p>&nbsp;&nbsp;JS中的变量和值都是保存到内存中存储。我们可大致理解为 把内存分为栈内存和堆内存。</p>\n<ol>\n<li>基本数据类型的值直接在栈内存中存储</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200411213852525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;图中可以看出我们声明了两个变量，将a的值复制给b，值都是123，但是a和b的123他们没有关系，互不干扰，是相互独立的。<br><img src=\"https://img-blog.csdnimg.cn/20200411214348602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;当我们进行a++的时候，a的值变为124，此时b的值并没有受到影响。只要不动b，a不管怎么变，都不会影响到b。<br>&nbsp;&nbsp;由此可见，基本数据类型的值直接在栈内存中存储，值与值之间都是独立存在的，修改变量不会影响到其他的变量。<br><br></p>\n<ol start=\"2\">\n<li>对象是保存到堆内存中的。<br><img src=\"https://img-blog.csdnimg.cn/2020041121541617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;对象是保存到堆内存中的，每创建一个新的对象，就会在堆内存中开辟一个新的空间。而变量保存的是对象的内存地址（对象的引用），他们两个保存的是同一个地址，指向相同的内存。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200411215718841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>&nbsp;&nbsp;当改变obj中name的值时，因为他们是指向相同的地址，所以obj1中的name也会跟着改变。<br>&nbsp;&nbsp;这就说明了，如果两个变量保存的是同一个对象的引用，当一个变量通过一个变量修改属性时，另一个也会受到影响。<br><br></p>\n<p>我再在看一种情况：<img src=\"https://img-blog.csdnimg.cn/20200411220621872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;我们将obj2的值修改为null，也就是我们将变量obj2和内存的联系给断开了，这样并不会影响受到obj1. </p>\n<br>\n&nbsp;&nbsp;接下来再看：\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c == d);    <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;当比较两个基本数据类型的值时，就是比较他们的值。毫无疑问，这两个是相等了，结果为true。</p>\n<br>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj3 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj4 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">obj3.name = <span class=\"string\">&quot;shs&quot;</span></span><br><span class=\"line\">obj4.name = <span class=\"string\">&quot;shs&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj3);\t\t\t\t <span class=\"comment\">//&#123;name:&quot;shs&quot;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj4);   \t\t\t <span class=\"comment\">//&#123;name:&quot;shs&quot;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj3 == obj4);       <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;当我们声明两个变量的时候，name值一样。输出都为{name:”shs”}，但是当他们进行比较的时候，结果就是false。<br>&nbsp;&nbsp;例如：这就像一对双胞胎，长的一模一样，但是还是两个人，他们是不相同。<br>&nbsp;&nbsp;我们画图来解释一下。<br><img src=\"https://img-blog.csdnimg.cn/20200411222754350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;当看见new时，就是在堆内存里开辟一个新的空间。<br>&nbsp;&nbsp;比较两个引用数据类型时，它就是比较对象的内存地址，，如果两个对象是一模一样的，但是地址不同，它会返回false。<br>&nbsp;&nbsp;例如:人的身份证，就算两个人再像，名字一样，一看身份证不一样，你们其他的就不用看了。</p>\n<br>\n&nbsp;&nbsp;总结一下，基本数据类型和引用数据类型根本区别：基本数据类型保存的是值，而引用数据类型保存的是地址（引用）。\n\n<p>&nbsp;&nbsp;我们一定要捋清楚他们的概念。好好消化一下吧。<br><br><br>&nbsp;&nbsp;愿你的坚持终有收获。</p>\n","more":"<p>&nbsp;&nbsp;&nbsp;&nbsp;基本类型：String、Number、Boolean、Null、Undefined<br>&nbsp;&nbsp;&nbsp;&nbsp;应用数据类型：Object<br>他们有什么区别呢？<br><br><br>&nbsp;&nbsp;我们先看一个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> b = a;</span><br><span class=\"line\">a++;                         修改a的值</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;a=&quot;</span> + a);      <span class=\"comment\">//a=11</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;b=&quot;</span> + b);      <span class=\"comment\">//b=10</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;我们发现a的值发生了改变，但是b的值并没有发生改变。这是就说明a和b是完全独立的，一个值的改变不会影响其他值。<br><br><br>&nbsp;&nbsp;我们再看一个例子：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"keyword\">var</span> obj1 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">      obj1.name = <span class=\"string\">&quot;阿清&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> obj2 = obj1;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj1.name);\t\t<span class=\"comment\">// 阿清</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj2.name); \t<span class=\"comment\">// 阿清</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//修改obj1对象中name中的值</span></span><br><span class=\"line\">\tobj1.name = <span class=\"string\">&quot;大大怪将军&quot;</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj1.name); \t<span class=\"comment\">// 大大怪将军</span></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.log(obj2.name); \t<span class=\"comment\">// 大大怪将军</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;修改之前输出了相同的结果，但是修改之后还是输出相同的结果，我们只是修改了obj1中name的值，并没有修改obj2中name的值，此时输出还是相同的。这是为什么呢？<br>&nbsp;&nbsp;&nbsp;&nbsp;这就是基本数据类型和引用数据类型的区别。为了方便说明，我们画一个图。</p>\n<p>&nbsp;&nbsp;JS中的变量和值都是保存到内存中存储。我们可大致理解为 把内存分为栈内存和堆内存。</p>\n<ol>\n<li>基本数据类型的值直接在栈内存中存储</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200411213852525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;图中可以看出我们声明了两个变量，将a的值复制给b，值都是123，但是a和b的123他们没有关系，互不干扰，是相互独立的。<br><img src=\"https://img-blog.csdnimg.cn/20200411214348602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;当我们进行a++的时候，a的值变为124，此时b的值并没有受到影响。只要不动b，a不管怎么变，都不会影响到b。<br>&nbsp;&nbsp;由此可见，基本数据类型的值直接在栈内存中存储，值与值之间都是独立存在的，修改变量不会影响到其他的变量。<br><br></p>\n<ol start=\"2\">\n<li>对象是保存到堆内存中的。<br><img src=\"https://img-blog.csdnimg.cn/2020041121541617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;对象是保存到堆内存中的，每创建一个新的对象，就会在堆内存中开辟一个新的空间。而变量保存的是对象的内存地址（对象的引用），他们两个保存的是同一个地址，指向相同的内存。</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200411215718841.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\"><br>&nbsp;&nbsp;当改变obj中name的值时，因为他们是指向相同的地址，所以obj1中的name也会跟着改变。<br>&nbsp;&nbsp;这就说明了，如果两个变量保存的是同一个对象的引用，当一个变量通过一个变量修改属性时，另一个也会受到影响。<br><br></p>\n<p>我再在看一种情况：<img src=\"https://img-blog.csdnimg.cn/20200411220621872.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;我们将obj2的值修改为null，也就是我们将变量obj2和内存的联系给断开了，这样并不会影响受到obj1. </p>\n<br>\n&nbsp;&nbsp;接下来再看：\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> c = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> d = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(c == d);    <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;当比较两个基本数据类型的值时，就是比较他们的值。毫无疑问，这两个是相等了，结果为true。</p>\n<br>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> obj3 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\"><span class=\"keyword\">var</span> obj4 = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</span><br><span class=\"line\">obj3.name = <span class=\"string\">&quot;shs&quot;</span></span><br><span class=\"line\">obj4.name = <span class=\"string\">&quot;shs&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj3);\t\t\t\t <span class=\"comment\">//&#123;name:&quot;shs&quot;&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj4);   \t\t\t <span class=\"comment\">//&#123;name:&quot;shs&quot;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(obj3 == obj4);       <span class=\"comment\">//false</span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;当我们声明两个变量的时候，name值一样。输出都为{name:”shs”}，但是当他们进行比较的时候，结果就是false。<br>&nbsp;&nbsp;例如：这就像一对双胞胎，长的一模一样，但是还是两个人，他们是不相同。<br>&nbsp;&nbsp;我们画图来解释一下。<br><img src=\"https://img-blog.csdnimg.cn/20200411222754350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3d6ZzA4MTc=,size_16,color_FFFFFF,t_70\" alt=\"在这里插入图片描述\">&nbsp;&nbsp;当看见new时，就是在堆内存里开辟一个新的空间。<br>&nbsp;&nbsp;比较两个引用数据类型时，它就是比较对象的内存地址，，如果两个对象是一模一样的，但是地址不同，它会返回false。<br>&nbsp;&nbsp;例如:人的身份证，就算两个人再像，名字一样，一看身份证不一样，你们其他的就不用看了。</p>\n<br>\n&nbsp;&nbsp;总结一下，基本数据类型和引用数据类型根本区别：基本数据类型保存的是值，而引用数据类型保存的是地址（引用）。\n\n<p>&nbsp;&nbsp;我们一定要捋清楚他们的概念。好好消化一下吧。<br><br><br>&nbsp;&nbsp;愿你的坚持终有收获。</p>","categories":[{"name":"JavaScript","path":"api/categories/JavaScript.json"}],"tags":[{"name":"JavaScript","path":"api/tags/JavaScript.json"}]}