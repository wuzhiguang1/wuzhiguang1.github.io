{"title":"Runtime-Compiler和Runtime-only的区别","slug":"69","date":"2020-07-29T08:35:12.000Z","updated":"2022-07-29T04:22:04.768Z","comments":true,"path":"api/articles/69.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/473899140993908742.jpg","https://qny.aqingya.cn/img/20200729160542.png","https://qny.aqingya.cn/img/20200729165801.png","https://qny.aqingya.cn/img/132562.png"],"content":"<p><img src=\"https://qny.aqingya.cn/img/473899140993908742.jpg\"></p>\n<span id=\"more\"></span>\n\n\n\n<p>在我们初始化vue项目的时候，会让我们选择 Runtime-Compiler 还是 Runtime-only 。</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729160542.png\"></p>\n<p>那我们就来看一下他们有什么区别<br>Runtime-Compiler：编译器版本。<br>Runtime-only：运行时版本。</p>\n<p>如果你需要在客户端编译模板（例如，向 <code>template</code>选项传入一个字符串，或者需要将模板中的非DOM的HTML挂载到一个元素），你需要带有编译器的版本，因而需要完整构建版本。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这种情况需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">template</span>:<span class=\"string\">`&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种情况不需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\">h</span>)</span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> h(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">this</span>.message)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在使用vue- loader或 verify时，*.vue文件中的模板会在构建时（build time）预编译pre-compile）为 Javascript。最终生成的 bundle中你不再需要编译器（ compiler，因此可以直接使用只含有运行时的构建版本（ runtime-only)。</p>\n<p>由于只含有运行时构建版本 （runtime-only比完整构建版本（full- build轻量大约30%,你应该尽可能使用只含有运行时的构建版本。如果你还是希望使用完整构建版本，则需要在打包器中配置别名：</p>\n<p>由于运行时版本的构建比其全面版本的重量轻约30%，Runtime-only 性能更高，代码量更少，因此你可以随时使用它。如果你仍然希望使用完整版本，则需要在捆绑程序中配置别名。</p>\n<br>\n\n<p><strong>总结</strong>：</p>\n<p><span style=\"color:red\"><strong>如果在之后的开发中，你依然使用 template ，就需要选择 Runtime-Compiler 。</strong></span><br><span style=\"color:red\"><strong>如果在之后的开发中，使用的是 .vue 文件夹开发，那么可以选择 Runtime-only 。</strong></span></p>\n<br>\n\n<p>Runtime-Compiler 和 Runtime-only</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729165801.png\"></p>\n<p>为什么存在这样的差异呢？</p>\n<p>我们需要先理解Vue应用程序是如何运行起来的。</p>\n<p>Vue中的模板如何最终渲染成真实DOM。</p>\n<p>我们来看下面的一幅图。</p>\n<p><img src=\"https://qny.aqingya.cn/img/132562.png\"></p>\n<p>Vue程序运行过程中</p>\n<p>Runtime-Compiler 执行步骤</p>\n<blockquote>\n<p>template –&gt; ast –&gt; render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 执行步骤（性能更高，代码量更少）</p>\n<blockquote>\n<p>render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 在执行代码的时候，直接就到render 了，减少<code>template --&gt; ast --&gt; render</code> 的代码量，性能更高。</p>\n","more":"<p>在我们初始化vue项目的时候，会让我们选择 Runtime-Compiler 还是 Runtime-only 。</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729160542.png\"></p>\n<p>那我们就来看一下他们有什么区别<br>Runtime-Compiler：编译器版本。<br>Runtime-only：运行时版本。</p>\n<p>如果你需要在客户端编译模板（例如，向 <code>template</code>选项传入一个字符串，或者需要将模板中的非DOM的HTML挂载到一个元素），你需要带有编译器的版本，因而需要完整构建版本。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 这种情况需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">template</span>:<span class=\"string\">`&lt;div&gt;&#123;&#123;message&#125;&#125;&lt;/div&gt;`</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 这种情况不需要编译器</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span>(<span class=\"params\">h</span>)</span>&#123;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> h(<span class=\"string\">&#x27;div&#x27;</span>,<span class=\"built_in\">this</span>.message)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>在使用vue- loader或 verify时，*.vue文件中的模板会在构建时（build time）预编译pre-compile）为 Javascript。最终生成的 bundle中你不再需要编译器（ compiler，因此可以直接使用只含有运行时的构建版本（ runtime-only)。</p>\n<p>由于只含有运行时构建版本 （runtime-only比完整构建版本（full- build轻量大约30%,你应该尽可能使用只含有运行时的构建版本。如果你还是希望使用完整构建版本，则需要在打包器中配置别名：</p>\n<p>由于运行时版本的构建比其全面版本的重量轻约30%，Runtime-only 性能更高，代码量更少，因此你可以随时使用它。如果你仍然希望使用完整版本，则需要在捆绑程序中配置别名。</p>\n<br>\n\n<p><strong>总结</strong>：</p>\n<p><span style=\"color:red\"><strong>如果在之后的开发中，你依然使用 template ，就需要选择 Runtime-Compiler 。</strong></span><br><span style=\"color:red\"><strong>如果在之后的开发中，使用的是 .vue 文件夹开发，那么可以选择 Runtime-only 。</strong></span></p>\n<br>\n\n<p>Runtime-Compiler 和 Runtime-only</p>\n<p><img src=\"https://qny.aqingya.cn/img/20200729165801.png\"></p>\n<p>为什么存在这样的差异呢？</p>\n<p>我们需要先理解Vue应用程序是如何运行起来的。</p>\n<p>Vue中的模板如何最终渲染成真实DOM。</p>\n<p>我们来看下面的一幅图。</p>\n<p><img src=\"https://qny.aqingya.cn/img/132562.png\"></p>\n<p>Vue程序运行过程中</p>\n<p>Runtime-Compiler 执行步骤</p>\n<blockquote>\n<p>template –&gt; ast –&gt; render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 执行步骤（性能更高，代码量更少）</p>\n<blockquote>\n<p>render –&gt; vdom –&gt; UI</p>\n</blockquote>\n<p>Runtime-only 在执行代码的时候，直接就到render 了，减少<code>template --&gt; ast --&gt; render</code> 的代码量，性能更高。</p>","categories":[{"name":"Vue","path":"api/categories/Vue.json"}],"tags":[{"name":"Vue","path":"api/tags/Vue.json"},{"name":"webpack","path":"api/tags/webpack.json"}]}