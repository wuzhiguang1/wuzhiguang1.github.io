{"title":"Vue中使用函数防抖和节流","slug":"88","date":"2020-08-15T02:15:51.000Z","updated":"2020-08-15T12:34:06.000Z","comments":true,"path":"api/articles/88.json","excerpt":" [Figure] ","covers":["https://cdn.jsdelivr.net/gh/wuzhiguang1/bolgfile@1.2/photo/IMG_0066.JPG"],"content":"<p><img src=\"https://cdn.jsdelivr.net/gh/wuzhiguang1/bolgfile@1.2/photo/IMG_0066.JPG\"></p>\n<span id=\"more\"></span>\n\n<br>\n\n<p><strong>函数防抖（Debounce）</strong>：指触发事件后在n秒内函数只执行一次，如果在n秒内又触发了事件，则会重新计算函数执行时间。<strong>如</strong>：搜素框，滚动条<br><strong>函数节流（throttle）</strong>：指连续触发事件但在n秒中只执行一次，避免某些事件频繁触发。<strong>如</strong>：按钮点击</p>\n<p><strong>Vue中使用防抖和节流</strong></p>\n<p><strong>第一步：定义公共防抖和节流函数</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 函数防抖</span></span><br><span class=\"line\"><span class=\"comment\">   * 触发事件后在n秒后执行，如果n秒内又触发事件，则重新计算时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">debounce</span>(<span class=\"params\">fn, wait = <span class=\"number\">1000</span></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (timer) <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        fn.apply(context, args);</span><br><span class=\"line\">      &#125;, wait)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 函数节流</span></span><br><span class=\"line\"><span class=\"comment\">   * 触发事件立即执行，但在n秒内连续触发则不执行</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">throttle</span>(<span class=\"params\">fn, wait = <span class=\"number\">1000</span></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (timer != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">      fn.apply(context, args);</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      &#125;, wait);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong><br>防抖和节流函数中return的函数不能使用箭头函数，如果使用箭头函数则this就会指向globalFunction，就会有问题</p>\n<p><strong>第二步：新建Vue组件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnDebounce(&#x27;函数&#x27;,&#x27;防抖&#x27;)&quot;</span>&gt;</span>函数防抖<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnThrottle(&#x27;函数&#x27;,&#x27;节流&#x27;)&quot;</span>&gt;</span>函数节流<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>第三步：引用globalFunction并在methods中使用</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">import</span> globalFunction <span class=\"keyword\">from</span> <span class=\"string\">&quot;../../utils/globalFunction&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;test&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"attr\">btnDebounce</span>: globalFunction.debounce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(str1, str2);</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"attr\">btnThrottle</span>: globalFunction.throttle(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(str1, str2);</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>说明：</strong><br><strong>globalFunction类的debounce、throttle返回的一个函数，就相当于</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btnDebounce: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(args);</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>所以可以拿到当前this和arguments参数，因为argument获取的是一个类似数组的对象，所以可以通过调用函数的apply方法来传递参数</strong></p>\n<br>\n\n<p>参考：<a href=\"https://blog.csdn.net/Liu_yunzhao/article/details/92850993?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-5-92850993.nonecase&utm_term=%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0vue\">传送门</a></p>\n<p><br><br><br></p>\n","more":"<br>\n\n<p><strong>函数防抖（Debounce）</strong>：指触发事件后在n秒内函数只执行一次，如果在n秒内又触发了事件，则会重新计算函数执行时间。<strong>如</strong>：搜素框，滚动条<br><strong>函数节流（throttle）</strong>：指连续触发事件但在n秒中只执行一次，避免某些事件频繁触发。<strong>如</strong>：按钮点击</p>\n<p><strong>Vue中使用防抖和节流</strong></p>\n<p><strong>第一步：定义公共防抖和节流函数</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 函数防抖</span></span><br><span class=\"line\"><span class=\"comment\">   * 触发事件后在n秒后执行，如果n秒内又触发事件，则重新计算时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">debounce</span>(<span class=\"params\">fn, wait = <span class=\"number\">1000</span></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (timer) <span class=\"built_in\">clearTimeout</span>(timer);</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        fn.apply(context, args);</span><br><span class=\"line\">      &#125;, wait)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 函数节流</span></span><br><span class=\"line\"><span class=\"comment\">   * 触发事件立即执行，但在n秒内连续触发则不执行</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">throttle</span>(<span class=\"params\">fn, wait = <span class=\"number\">1000</span></span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> timer;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (timer != <span class=\"literal\">null</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">      fn.apply(context, args);</span><br><span class=\"line\">      timer = <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        timer = <span class=\"literal\">null</span>;</span><br><span class=\"line\">      &#125;, wait);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>注意：</strong><br>防抖和节流函数中return的函数不能使用箭头函数，如果使用箭头函数则this就会指向globalFunction，就会有问题</p>\n<p><strong>第二步：新建Vue组件</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;wrapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnDebounce(&#x27;函数&#x27;,&#x27;防抖&#x27;)&quot;</span>&gt;</span>函数防抖<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;btnThrottle(&#x27;函数&#x27;,&#x27;节流&#x27;)&quot;</span>&gt;</span>函数节流<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>第三步：引用globalFunction并在methods中使用</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  <span class=\"keyword\">import</span> globalFunction <span class=\"keyword\">from</span> <span class=\"string\">&quot;../../utils/globalFunction&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&quot;test&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"attr\">btnDebounce</span>: globalFunction.debounce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(str1, str2);</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"attr\">btnThrottle</span>: globalFunction.throttle(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">str1, str2</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(str1, str2);</span><br><span class=\"line\">      &#125;, <span class=\"number\">2000</span>),</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>说明：</strong><br><strong>globalFunction类的debounce、throttle返回的一个函数，就相当于</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">btnDebounce: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> context = <span class=\"built_in\">this</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> args = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(args);</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>所以可以拿到当前this和arguments参数，因为argument获取的是一个类似数组的对象，所以可以通过调用函数的apply方法来传递参数</strong></p>\n<br>\n\n<p>参考：<a href=\"https://blog.csdn.net/Liu_yunzhao/article/details/92850993?utm_medium=distribute.pc_aggpage_search_result.none-task-blog-2~all~first_rank_v2~rank_v25-5-92850993.nonecase&utm_term=%E8%8A%82%E6%B5%81%E5%87%BD%E6%95%B0vue\">传送门</a></p>\n<p><br><br><br></p>","categories":[{"name":"Vue","path":"api/categories/Vue.json"}],"tags":[{"name":"函数防抖","path":"api/tags/函数防抖.json"},{"name":"函数节流","path":"api/tags/函数节流.json"}]}