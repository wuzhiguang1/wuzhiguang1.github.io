{"title":"mockjs——mockjs定义、mockjs安装、mockjs使用、mockjs方法、mockjs语法、代码示例","slug":"272","date":"2024-03-04T02:22:33.000Z","updated":"2024-03-04T02:29:55.467Z","comments":true,"path":"api/articles/272.json","excerpt":null,"covers":["https://img-blog.csdnimg.cn/48ca82f9bc1b432ba0d5898aba371b38.png"],"content":"<h2 id=\"一、mockjs定义\"><a href=\"#一、mockjs定义\" class=\"headerlink\" title=\"一、mockjs定义\"></a>一、mockjs定义</h2><blockquote>\n<ul>\n<li>拦截ajax请求，生成伪数据</li>\n<li>应用场景:在工作中,后端已经出接口文档,还没有实现数据</li>\n<li>由前端依照接口文档模拟伪数据,实现前端开发功能</li>\n</ul>\n</blockquote>\n<h2 id=\"二、mockjs安装\"><a href=\"#二、mockjs安装\" class=\"headerlink\" title=\"二、mockjs安装\"></a>二、mockjs安装</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">npm</span> <span class=\"selector-tag\">i</span> <span class=\"selector-tag\">mockjs</span> <span class=\"selector-tag\">-D</span></span><br></pre></td></tr></table></figure>\n\n<p>三 、mockjs使用（从此处起下方标红为关键信息，黑色可不看）</p>\n<ul>\n<li><strong>定义/mock/index.js</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先导入Mock</span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">然后定义伪数据</span><br><span class=\"line\">(小示例，下方精华里有具体定义步骤)</span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot; lapi/feed&quot;</span>, Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;data|20&quot;</span>: [&#123;自定义数据类型&#125;]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>在main.js导入</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./mock/index.js&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用mockjs前先在main-js中进行如下操作-post与get都要进行\"><a href=\"#使用mockjs前先在main-js中进行如下操作-post与get都要进行\" class=\"headerlink\" title=\"使用mockjs前先在main.js中进行如下操作(post与get都要进行)\"></a>使用mockjs前先在main.js中进行如下操作(post与get都要进行)</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在main.js中导入自定义mock文件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./mock/mock.js&#x27;</span>;  必须</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 导入axios 没有./  (axios网络请求工具:1不依赖dom,2.前后端都可以用,3. 丰富拦截,扩展功能,4可封装,复用性强)</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span>; 必须</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 挂载到vue的全局(原型上),在每个组件都可以使用 ,prototype是固定的,$axios是自定义的</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Vue.prototype.$axios = axios; 必须</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 指定默认的请求域名 若是不指定则控制台中不显示此网络请求</span></span><br><span class=\"line\"> </span><br><span class=\"line\">axios.defaults.baseURL = <span class=\"string\">&quot;http://dida100.com:8888&quot;</span> 注意get请求要删掉此步骤</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 给每个请求拦截一下,添加请求Token信息</span></span><br><span class=\"line\"> </span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">config</span>)</span>&#123;</span><br><span class=\"line\">\tconfig.headers.Authorization = <span class=\"string\">&#x27;Bearer &#x27;</span>+<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> config;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mockjs使用post方式小案例\"><a href=\"#mockjs使用post方式小案例\" class=\"headerlink\" title=\"mockjs使用post方式小案例\"></a>mockjs使用post方式小案例</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路径：src/自定义mock文件/mock.js</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 当用户ajax地址里面 有/api/login 的时候 返回如下数据</span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot;/api/login&quot;</span>,&#123;</span><br><span class=\"line\">    下方为自定义的数据</span><br><span class=\"line\">    <span class=\"attr\">code</span>:<span class=\"number\">200</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>:<span class=\"string\">&quot;登录成功&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">user</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;彭于晏&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">18</span>,<span class=\"attr\">rank</span>:<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">    <span class=\"attr\">token</span>:<span class=\"string\">&#x27;joaaohiefuopieeaskfoefeop&#x27;</span>,<span class=\"comment\">//token随便乱写</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>需要使用mockjs数据的文件</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post方式 需要传递的参数以对象的形式写在地址后 最终出现在载荷中</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    创建后调用mockjs请求数据</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.login()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    定义请求方法</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">login</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    发送ajax请求</span><br><span class=\"line\">                              由于指定了默认的请求域名，此处的用户名与密码必须真实存在</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$axios.post(<span class=\"string\">&quot;/api/login&quot;</span>, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;彭于晏&#x27;</span>, <span class=\"attr\">password</span>: <span class=\"string\">&#x27;pyy&#x27;</span> &#125;)</span><br><span class=\"line\">                .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    打印请求数据</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;login&quot;</span>, res.data);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span></span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">                )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mockjs使用get方式小案例（常用关键）\"><a href=\"#mockjs使用get方式小案例（常用关键）\" class=\"headerlink\" title=\"mockjs使用get方式小案例（常用关键）\"></a>mockjs使用get方式小案例（常用关键）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路径：src/自定义mock文件/mock.js</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">写法一：规定只能为get请求</span><br><span class=\"line\"><span class=\"comment\">// 拦截get请求，返回数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot;/api/feed&quot;</span>,<span class=\"string\">&quot;get&quot;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;get 拦截&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\">//返回10条随机数据</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;data|10&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                下方为自定义的数据类型</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"attr\">name</span>:<span class=\"string\">&quot;@cname&quot;</span>,<span class=\"comment\">//随即中文名</span></span><br><span class=\"line\">                <span class=\"attr\">msg</span>:<span class=\"string\">&quot;@cparagraph(2,3)&quot;</span>,<span class=\"comment\">//随机段落</span></span><br><span class=\"line\">                <span class=\"attr\">date</span>:<span class=\"string\">&quot;@datetime&quot;</span>,<span class=\"comment\">//随机日期</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">推荐方法二</span><br><span class=\"line\">写法二：省略许多无用步骤 且未规定请求方式 post或get均可使用</span><br><span class=\"line\"><span class=\"comment\">// 拦截get请求，返回数据</span></span><br><span class=\"line\"><span class=\"comment\">// 当用户ajax地址里面 有/api/login 的时候 返回如下数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot;/api/feed&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">//返回10条随机数据 </span></span><br><span class=\"line\">    Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;data|10&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">name</span>:<span class=\"string\">&quot;@cname&quot;</span>,<span class=\"comment\">//随即中文名</span></span><br><span class=\"line\">                <span class=\"attr\">msg</span>:<span class=\"string\">&quot;@cparagraph(2,3)&quot;</span>,<span class=\"comment\">//随机段落</span></span><br><span class=\"line\">                <span class=\"attr\">date</span>:<span class=\"string\">&quot;@datetime&quot;</span>,<span class=\"comment\">//随机日期</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>​     <strong>需要使用mockjs数据的文件</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get请求方式</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    创建后调用数据请求方法</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getFeed()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    定义请求方法</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">getFeed</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$axios.get(<span class=\"string\">&quot;/api/feed&quot;</span>)</span><br><span class=\"line\">                .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(res.data)</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、mockjs语法-（精华）\"><a href=\"#六、mockjs语法-（精华）\" class=\"headerlink\" title=\"六、mockjs语法 （精华）\"></a>六、mockjs语法 （精华）</h2><p>常用语法</p>\n<p>“id”:”@id”<br>“star|1-2”:”★”  字符串重复一道2次<br>“price|100-200.2-3” 小数点2-3位<br>“data|10”:[{name:”名称”}] 数组的内容重复10遍<br>“live|1”:true,随机返回true,false<br>“tel”:/13 \\d{9}/,<br>“des”:function(){ return this.start+this.price}<br>“name”:”@cname” 表示中文名称<br>“address”:”@country(true)” 地址<br>“ip”:”@ip”,<br>“description”:”@cparagraph(1, 3)” 随机段落2-3行<br>“pic”:@dataImage(‘200x100’,’色块图片’)`</p>\n<p><img src=\"https://img-blog.csdnimg.cn/48ca82f9bc1b432ba0d5898aba371b38.png\"></p>\n","more":"<h2 id=\"一、mockjs定义\"><a href=\"#一、mockjs定义\" class=\"headerlink\" title=\"一、mockjs定义\"></a>一、mockjs定义</h2><blockquote>\n<ul>\n<li>拦截ajax请求，生成伪数据</li>\n<li>应用场景:在工作中,后端已经出接口文档,还没有实现数据</li>\n<li>由前端依照接口文档模拟伪数据,实现前端开发功能</li>\n</ul>\n</blockquote>\n<h2 id=\"二、mockjs安装\"><a href=\"#二、mockjs安装\" class=\"headerlink\" title=\"二、mockjs安装\"></a>二、mockjs安装</h2><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">npm</span> <span class=\"selector-tag\">i</span> <span class=\"selector-tag\">mockjs</span> <span class=\"selector-tag\">-D</span></span><br></pre></td></tr></table></figure>\n\n<p>三 、mockjs使用（从此处起下方标红为关键信息，黑色可不看）</p>\n<ul>\n<li><strong>定义/mock/index.js</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先导入Mock</span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">然后定义伪数据</span><br><span class=\"line\">(小示例，下方精华里有具体定义步骤)</span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot; lapi/feed&quot;</span>, Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;data|20&quot;</span>: [&#123;自定义数据类型&#125;]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><strong>在main.js导入</strong></li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./mock/index.js&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用mockjs前先在main-js中进行如下操作-post与get都要进行\"><a href=\"#使用mockjs前先在main-js中进行如下操作-post与get都要进行\" class=\"headerlink\" title=\"使用mockjs前先在main.js中进行如下操作(post与get都要进行)\"></a>使用mockjs前先在main.js中进行如下操作(post与get都要进行)</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 在main.js中导入自定义mock文件</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&#x27;./mock/mock.js&#x27;</span>;  必须</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 导入axios 没有./  (axios网络请求工具:1不依赖dom,2.前后端都可以用,3. 丰富拦截,扩展功能,4可封装,复用性强)</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> axios <span class=\"keyword\">from</span> <span class=\"string\">&#x27;axios&#x27;</span>; 必须</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 挂载到vue的全局(原型上),在每个组件都可以使用 ,prototype是固定的,$axios是自定义的</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Vue.prototype.$axios = axios; 必须</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 指定默认的请求域名 若是不指定则控制台中不显示此网络请求</span></span><br><span class=\"line\"> </span><br><span class=\"line\">axios.defaults.baseURL = <span class=\"string\">&quot;http://dida100.com:8888&quot;</span> 注意get请求要删掉此步骤</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 给每个请求拦截一下,添加请求Token信息</span></span><br><span class=\"line\"> </span><br><span class=\"line\">axios.interceptors.request.use(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">config</span>)</span>&#123;</span><br><span class=\"line\">\tconfig.headers.Authorization = <span class=\"string\">&#x27;Bearer &#x27;</span>+<span class=\"built_in\">localStorage</span>.getItem(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> config;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mockjs使用post方式小案例\"><a href=\"#mockjs使用post方式小案例\" class=\"headerlink\" title=\"mockjs使用post方式小案例\"></a>mockjs使用post方式小案例</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路径：src/自定义mock文件/mock.js</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 当用户ajax地址里面 有/api/login 的时候 返回如下数据</span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot;/api/login&quot;</span>,&#123;</span><br><span class=\"line\">    下方为自定义的数据</span><br><span class=\"line\">    <span class=\"attr\">code</span>:<span class=\"number\">200</span>,</span><br><span class=\"line\">    <span class=\"attr\">msg</span>:<span class=\"string\">&quot;登录成功&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">user</span>:&#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;彭于晏&quot;</span>,<span class=\"attr\">age</span>:<span class=\"number\">18</span>,<span class=\"attr\">rank</span>:<span class=\"number\">10</span>&#125;,</span><br><span class=\"line\">    <span class=\"attr\">token</span>:<span class=\"string\">&#x27;joaaohiefuopieeaskfoefeop&#x27;</span>,<span class=\"comment\">//token随便乱写</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>需要使用mockjs数据的文件</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post方式 需要传递的参数以对象的形式写在地址后 最终出现在载荷中</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    创建后调用mockjs请求数据</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.login()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    定义请求方法</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">login</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">    发送ajax请求</span><br><span class=\"line\">                              由于指定了默认的请求域名，此处的用户名与密码必须真实存在</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$axios.post(<span class=\"string\">&quot;/api/login&quot;</span>, &#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;彭于晏&#x27;</span>, <span class=\"attr\">password</span>: <span class=\"string\">&#x27;pyy&#x27;</span> &#125;)</span><br><span class=\"line\">                .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">    打印请求数据</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;login&quot;</span>, res.data);</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span></span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">                )</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"mockjs使用get方式小案例（常用关键）\"><a href=\"#mockjs使用get方式小案例（常用关键）\" class=\"headerlink\" title=\"mockjs使用get方式小案例（常用关键）\"></a>mockjs使用get方式小案例（常用关键）</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">路径：src/自定义mock文件/mock.js</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">import</span> Mock <span class=\"keyword\">from</span> <span class=\"string\">&#x27;mockjs&#x27;</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">写法一：规定只能为get请求</span><br><span class=\"line\"><span class=\"comment\">// 拦截get请求，返回数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot;/api/feed&quot;</span>,<span class=\"string\">&quot;get&quot;</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">&quot;get 拦截&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\">//返回10条随机数据</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;data|10&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                下方为自定义的数据类型</span><br><span class=\"line\"> </span><br><span class=\"line\">                <span class=\"attr\">name</span>:<span class=\"string\">&quot;@cname&quot;</span>,<span class=\"comment\">//随即中文名</span></span><br><span class=\"line\">                <span class=\"attr\">msg</span>:<span class=\"string\">&quot;@cparagraph(2,3)&quot;</span>,<span class=\"comment\">//随机段落</span></span><br><span class=\"line\">                <span class=\"attr\">date</span>:<span class=\"string\">&quot;@datetime&quot;</span>,<span class=\"comment\">//随机日期</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">推荐方法二</span><br><span class=\"line\">写法二：省略许多无用步骤 且未规定请求方式 post或get均可使用</span><br><span class=\"line\"><span class=\"comment\">// 拦截get请求，返回数据</span></span><br><span class=\"line\"><span class=\"comment\">// 当用户ajax地址里面 有/api/login 的时候 返回如下数据</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Mock.mock(<span class=\"string\">&quot;/api/feed&quot;</span>,</span><br><span class=\"line\">    <span class=\"comment\">//返回10条随机数据 </span></span><br><span class=\"line\">    Mock.mock(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;data|10&quot;</span>:[</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">name</span>:<span class=\"string\">&quot;@cname&quot;</span>,<span class=\"comment\">//随即中文名</span></span><br><span class=\"line\">                <span class=\"attr\">msg</span>:<span class=\"string\">&quot;@cparagraph(2,3)&quot;</span>,<span class=\"comment\">//随机段落</span></span><br><span class=\"line\">                <span class=\"attr\">date</span>:<span class=\"string\">&quot;@datetime&quot;</span>,<span class=\"comment\">//随机日期</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>​     <strong>需要使用mockjs数据的文件</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">get请求方式</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    创建后调用数据请求方法</span><br><span class=\"line\">    <span class=\"function\"><span class=\"title\">created</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.getFeed()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>: &#123;</span><br><span class=\"line\">    定义请求方法</span><br><span class=\"line\">        <span class=\"function\"><span class=\"title\">getFeed</span>(<span class=\"params\"></span>)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.$axios.get(<span class=\"string\">&quot;/api/feed&quot;</span>)</span><br><span class=\"line\">                .then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.log(res.data)</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">                .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"built_in\">console</span>.error(err)</span><br><span class=\"line\">                &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"六、mockjs语法-（精华）\"><a href=\"#六、mockjs语法-（精华）\" class=\"headerlink\" title=\"六、mockjs语法 （精华）\"></a>六、mockjs语法 （精华）</h2><p>常用语法</p>\n<p>“id”:”@id”<br>“star|1-2”:”★”  字符串重复一道2次<br>“price|100-200.2-3” 小数点2-3位<br>“data|10”:[{name:”名称”}] 数组的内容重复10遍<br>“live|1”:true,随机返回true,false<br>“tel”:/13 \\d{9}/,<br>“des”:function(){ return this.start+this.price}<br>“name”:”@cname” 表示中文名称<br>“address”:”@country(true)” 地址<br>“ip”:”@ip”,<br>“description”:”@cparagraph(1, 3)” 随机段落2-3行<br>“pic”:@dataImage(‘200x100’,’色块图片’)`</p>\n<p><img src=\"https://img-blog.csdnimg.cn/48ca82f9bc1b432ba0d5898aba371b38.png\"></p>\n","categories":[{"name":"Mock.js","path":"api/categories/Mock.js.json"}],"tags":[{"name":"Mock.js","path":"api/tags/Mock.js.json"}]}