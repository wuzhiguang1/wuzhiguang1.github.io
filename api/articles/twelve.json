{"title":"用CSS来解决“高度塌陷”问题（清除浮动）","slug":"twelve","date":"2020-04-23T10:27:11.000Z","updated":"2022-07-29T04:22:04.753Z","comments":true,"path":"api/articles/twelve.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/bfcaae14535d4f188713af70e9ed94eb.jpeg"],"content":"<p><img src=\"https://qny.aqingya.cn/img/bfcaae14535d4f188713af70e9ed94eb.jpeg\"></p>\n<span id=\"more\"></span>\n\n<br>\n<br>\n\n<h2 id=\"什么是CSS清除浮动？\"><a href=\"#什么是CSS清除浮动？\" class=\"headerlink\" title=\"什么是CSS清除浮动？\"></a>什么是CSS清除浮动？</h2><blockquote>\n<p>在非IE浏览器（如Firefox）下，当容器的高度为auto，且容器的内容中有浮动（float为left或right）的元素，在这种情况下，容器的高度不能自动伸长以适应内容的高度，使得内容溢出到容器外面而影响（甚至破坏）布局的现象。这个现象叫浮动溢出，为了防止这个现象的出现而进行的CSS处理，就叫CSS清除浮动。</p>\n</blockquote>\n<p><strong>方法一：使用带clear属性的空元素</strong></p>\n<p>在浮动元素后使用一个空元素如``，并在CSS中赋予<code>.clear&#123;clear:both;&#125;</code>属性即可清理浮动。亦可使用<code> 或</code>来进行清理。</p>\n<p><strong>优点：简单，代码少，浏览器兼容性好。</strong><br><strong>缺点：需要添加大量无语义的html元素，代码不够优雅，后期不容易维护。</strong></p>\n<p><strong>方法二：使用CSS的overflow属性</strong></p>\n<p>给浮动元素的容器添加<code>overflow:hidden;</code>或<code>overflow:auto;</code>可以清除浮动，另外在 IE6 中还需要触发 hasLayout ，例如为父元素设置容器宽高或设置 zoom:1。在添加overflow属性后，浮动元素又回到了容器层，把容器高度撑起，达到了清理浮动的效果。</p>\n<p><strong>方法三：给浮动的元素的容器添加浮动</strong></p>\n<p>给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影响布局，不推荐使用。</p>\n<p><strong>方法四：使用邻接元素处理</strong></p>\n<p>什么都不做，给浮动元素后面的元素添加clear属性。</p>\n<p><strong>方法五：使用CSS的:after伪元素</strong>（较完美）</p>\n<p>结合 :after 伪元素（注意这不是伪类，而是伪元素，代表一个元素之后最近的元素）和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。<br>给浮动元素的容器添加一个clearfix的class，然后给这个class添加一个:after伪元素实现元素末尾添加一个看不见的块元素（Block element）清理浮动。<br><br></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &lt;style&gt;</span><br><span class=\"line\">      <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">::after</span>,</span><br><span class=\"line\">      <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">          <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">          <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">          <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 触发 hasLayout */</span> </span><br><span class=\"line\">  zoom: <span class=\"number\">1</span>; </span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\">  &lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>通过CSS伪元素在容器的内部元素最后添加了一个看不见的空格”020”或点”.”，并且赋予clear属性来清除浮动。需要注意的是为了IE6和IE7浏览器，要给clearfix这个class添加一条zoom:1;触发haslayout。</p>\n<br>\n<br>","more":"<br>\n<br>\n\n<h2 id=\"什么是CSS清除浮动？\"><a href=\"#什么是CSS清除浮动？\" class=\"headerlink\" title=\"什么是CSS清除浮动？\"></a>什么是CSS清除浮动？</h2><blockquote>\n<p>在非IE浏览器（如Firefox）下，当容器的高度为auto，且容器的内容中有浮动（float为left或right）的元素，在这种情况下，容器的高度不能自动伸长以适应内容的高度，使得内容溢出到容器外面而影响（甚至破坏）布局的现象。这个现象叫浮动溢出，为了防止这个现象的出现而进行的CSS处理，就叫CSS清除浮动。</p>\n</blockquote>\n<p><strong>方法一：使用带clear属性的空元素</strong></p>\n<p>在浮动元素后使用一个空元素如``，并在CSS中赋予<code>.clear&#123;clear:both;&#125;</code>属性即可清理浮动。亦可使用<code> 或</code>来进行清理。</p>\n<p><strong>优点：简单，代码少，浏览器兼容性好。</strong><br><strong>缺点：需要添加大量无语义的html元素，代码不够优雅，后期不容易维护。</strong></p>\n<p><strong>方法二：使用CSS的overflow属性</strong></p>\n<p>给浮动元素的容器添加<code>overflow:hidden;</code>或<code>overflow:auto;</code>可以清除浮动，另外在 IE6 中还需要触发 hasLayout ，例如为父元素设置容器宽高或设置 zoom:1。在添加overflow属性后，浮动元素又回到了容器层，把容器高度撑起，达到了清理浮动的效果。</p>\n<p><strong>方法三：给浮动的元素的容器添加浮动</strong></p>\n<p>给浮动元素的容器也添加上浮动属性即可清除内部浮动，但是这样会使其整体浮动，影响布局，不推荐使用。</p>\n<p><strong>方法四：使用邻接元素处理</strong></p>\n<p>什么都不做，给浮动元素后面的元素添加clear属性。</p>\n<p><strong>方法五：使用CSS的:after伪元素</strong>（较完美）</p>\n<p>结合 :after 伪元素（注意这不是伪类，而是伪元素，代表一个元素之后最近的元素）和 IEhack ，可以完美兼容当前主流的各大浏览器，这里的 IEhack 指的是触发 hasLayout。<br>给浮动元素的容器添加一个clearfix的class，然后给这个class添加一个:after伪元素实现元素末尾添加一个看不见的块元素（Block element）清理浮动。<br><br></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &lt;style&gt;</span><br><span class=\"line\">      <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">::after</span>,</span><br><span class=\"line\">      <span class=\"selector-class\">.clearfix</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">          <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">          <span class=\"attribute\">display</span>: table;</span><br><span class=\"line\">          <span class=\"attribute\">clear</span>: both;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"selector-class\">.clearfix</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">/* 触发 hasLayout */</span> </span><br><span class=\"line\">  zoom: <span class=\"number\">1</span>; </span><br><span class=\"line\">\t &#125;</span><br><span class=\"line\">  &lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>通过CSS伪元素在容器的内部元素最后添加了一个看不见的空格”020”或点”.”，并且赋予clear属性来清除浮动。需要注意的是为了IE6和IE7浏览器，要给clearfix这个class添加一条zoom:1;触发haslayout。</p>\n<br>\n<br>","categories":[{"name":"CSS","path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","path":"api/tags/CSS.json"}]}