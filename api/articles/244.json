{"title":"git在切换分支的时候，管理暂存本地修改的代码","slug":"244","date":"2022-11-10T07:56:19.000Z","updated":"2022-12-08T09:38:56.905Z","comments":true,"path":"api/articles/244.json","excerpt":null,"covers":null,"content":"<p>当我们在使用git进行团队协作开发的时候，会有多个开发分支。例如：master、dev、feature等等分支。<br>例如：当我们在feature分支进行开发的时候。然后想切换到master分支看一下这部分业务逻辑怎么处理的，运行看看效果，但是我们已经在feature分支做了修改，因为业务没有写完不能直接commit。。。<br>所以git stash 就派上用场了</p>\n<p>例如我们在feature分支做了修改。在切换分支的先进行“暂存”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch  // 查看当前分支</span><br><span class=\"line\"></span><br><span class=\"line\">git stash // 将本地改动暂存到“栈”里面</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout master // 切换到master分支</span><br><span class=\"line\"></span><br><span class=\"line\">git pull // 拉取master分支最新的代码</span><br><span class=\"line\">-------------------------------------------------</span><br><span class=\"line\"><span class=\"comment\"># 当我们再想切换回当前的feature分支</span></span><br><span class=\"line\"></span><br><span class=\"line\">git checkout feature // 切换回到feature分支</span><br><span class=\"line\"></span><br><span class=\"line\">git stash show //显示当前放在栈里的文件</span><br><span class=\"line\"></span><br><span class=\"line\">git stash pop // 再将刚才暂存到“栈”里面的代码取出来</span><br><span class=\"line\">--------------------------------------------------</span><br><span class=\"line\">// 这样就可以继续接着刚才的业务逻辑继续开发了</span><br></pre></td></tr></table></figure>\n\n","more":"<p>当我们在使用git进行团队协作开发的时候，会有多个开发分支。例如：master、dev、feature等等分支。<br>例如：当我们在feature分支进行开发的时候。然后想切换到master分支看一下这部分业务逻辑怎么处理的，运行看看效果，但是我们已经在feature分支做了修改，因为业务没有写完不能直接commit。。。<br>所以git stash 就派上用场了</p>\n<p>例如我们在feature分支做了修改。在切换分支的先进行“暂存”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch  // 查看当前分支</span><br><span class=\"line\"></span><br><span class=\"line\">git stash // 将本地改动暂存到“栈”里面</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout master // 切换到master分支</span><br><span class=\"line\"></span><br><span class=\"line\">git pull // 拉取master分支最新的代码</span><br><span class=\"line\">-------------------------------------------------</span><br><span class=\"line\"><span class=\"comment\"># 当我们再想切换回当前的feature分支</span></span><br><span class=\"line\"></span><br><span class=\"line\">git checkout feature // 切换回到feature分支</span><br><span class=\"line\"></span><br><span class=\"line\">git stash show //显示当前放在栈里的文件</span><br><span class=\"line\"></span><br><span class=\"line\">git stash pop // 再将刚才暂存到“栈”里面的代码取出来</span><br><span class=\"line\">--------------------------------------------------</span><br><span class=\"line\">// 这样就可以继续接着刚才的业务逻辑继续开发了</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"git","path":"api/categories/git.json"}],"tags":[{"name":"git","path":"api/tags/git.json"}]}