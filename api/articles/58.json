{"title":"webpack详细配置","slug":"58","date":"2020-07-17T06:31:38.000Z","updated":"2022-07-29T04:22:04.773Z","comments":true,"path":"api/articles/58.json","excerpt":" [Figure] ","covers":["https://qny.aqingya.cn/img/256f40f171ae48459ab8e570c92a78db.jpeg"],"content":"<p><img src=\"https://qny.aqingya.cn/img/256f40f171ae48459ab8e570c92a78db.jpeg\"></p>\n<span id=\"more\"></span>\n\n<h1 id=\"webpack详细配置-smile\"><a href=\"#webpack详细配置-smile\" class=\"headerlink\" title=\"webpack详细配置:smile:\"></a>webpack详细配置:smile:</h1><h2 id=\"webpack详细配置之entry\"><a href=\"#webpack详细配置之entry\" class=\"headerlink\" title=\"webpack详细配置之entry\"></a>webpack详细配置之entry</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry: 入口起点</span><br><span class=\"line\">    1. string --&gt; &#x27;./src/index.js&#x27;</span><br><span class=\"line\">      单入口</span><br><span class=\"line\">      打包形成一个chunk。 输出一个bundle文件。</span><br><span class=\"line\">      此时chunk的名称默认是 main</span><br><span class=\"line\">    2. array  --&gt; [&#x27;./src/index.js&#x27;, &#x27;./src/add.js&#x27;]</span><br><span class=\"line\">      多入口</span><br><span class=\"line\">      所有入口文件最终只会形成一个chunk, 输出出去只有一个bundle文件。</span><br><span class=\"line\">        --&gt; 只有在HMR功能中让html热更新生效~</span><br><span class=\"line\">    3. object</span><br><span class=\"line\">      多入口</span><br><span class=\"line\">      有几个入口文件就形成几个chunk，输出几个bundle文件</span><br><span class=\"line\">      此时chunk的名称是 key</span><br><span class=\"line\"></span><br><span class=\"line\">      --&gt; 特殊用法</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          // 所有入口文件最终只会形成一个chunk, 输出出去只有一个bundle文件。</span><br><span class=\"line\">          index: [&#x27;./src/index.js&#x27;, &#x27;./src/count.js&#x27;], </span><br><span class=\"line\">          // 形成一个chunk，输出一个bundle文件。</span><br><span class=\"line\">          add: &#x27;./src/add.js&#x27;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">index</span>: [<span class=\"string\">&#x27;./src/index.js&#x27;</span>, <span class=\"string\">&#x27;./src/count.js&#x27;</span>], </span><br><span class=\"line\">    <span class=\"attr\">add</span>: <span class=\"string\">&#x27;./src/add.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"webpack详细配置之output\"><a href=\"#webpack详细配置之output\" class=\"headerlink\" title=\"webpack详细配置之output\"></a>webpack详细配置之output</h2><ul>\n<li><p><code>filename</code>:文件名称（指定名称+目录）。</p>\n</li>\n<li><p><code>path</code>:输出文件目录（将来所有资源输出的公共目录）。</p>\n</li>\n<li><p><code>publicPath</code>:所有资源引入公共路径前缀 –&gt; ‘imgs/a.jpg’ –&gt; ‘/imgs/a.jpg’。</p>\n</li>\n<li><p><code>chunkFilename</code>:非入口chunk的名称，如：</p>\n<p>第一种情况：通过import语法，将文件单独分割成一个chunk，这个chunk的名称会采用这个<code>chunkFilename: &#39;js/[name]_chunk.js&#39;</code>这个命名。</p>\n<p>第二种情况： 通过optimization将node_modules分割成单独的一个chunk，这个chunk的名称也会采用这个<code>chunkFilename: &#39;js/[name]_chunk.js&#39;</code>这个命名。</p>\n<p>关于代码分割详细看：<a href=\"https://aqingya.cn/2020/07/16/56/#code-split-%E4%BB%A3%E7%A0%81%E5%88%86%E5%89%B2\">这里。</a></p>\n</li>\n<li><p><code>library</code>:整个库向外暴露的变量名。</p>\n</li>\n<li><p><code>llibraryTarget: &#39;window&#39;</code>  变量名添加到哪个上 browser。</p>\n</li>\n<li><p><code>libraryTarget: &#39;global&#39;</code> 变量名添加到哪个上 node。</p>\n<br></li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 文件名称（指定名称+目录）</span></span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 输出文件目录（将来所有资源输出的公共目录）</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>),</span><br><span class=\"line\">    <span class=\"comment\">// 所有资源引入公共路径前缀 --&gt; &#x27;imgs/a.jpg&#x27; --&gt; &#x27;/imgs/a.jpg&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;js/[name]_chunk.js&#x27;</span>, <span class=\"comment\">// 非入口chunk的名称</span></span><br><span class=\"line\">    <span class=\"comment\">// library: &#x27;[name]&#x27;, // 整个库向外暴露的变量名</span></span><br><span class=\"line\">    <span class=\"comment\">// libraryTarget: &#x27;window&#x27; // 变量名添加到哪个上 browser</span></span><br><span class=\"line\">    <span class=\"comment\">// libraryTarget: &#x27;global&#x27; // 变量名添加到哪个上 node</span></span><br><span class=\"line\">    <span class=\"comment\">// libraryTarget: &#x27;commonjs&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"webpack详细配置之module\"><a href=\"#webpack详细配置之module\" class=\"headerlink\" title=\"webpack详细配置之module\"></a>webpack详细配置之module</h2><ul>\n<li><code>test: /\\.css$/</code> :正则表达式，用来检测文件。</li>\n<li><code>loader: &#39;eslint-loader&#39; </code>单个loader用loader。</li>\n<li><code>use: [&#39;style-loader&#39;, &#39;css-loader&#39;]</code> 多个loader用use。</li>\n<li><code>exclude: /node_modules/ </code>排除node_modules下的js文件。</li>\n<li><code>include: resolve(__dirname, &#39;src&#39;) </code> 只检查 src 下的js文件。</li>\n<li><code>enforce: &#39;pre&#39;</code> 优先执行。</li>\n<li><code>enforce: &#39;post&#39;</code> 延后执行。</li>\n<li><code>oneOf: []</code> 以下配置只会生效一个。</li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// loader的配置</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 多个loader用use</span></span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 排除node_modules下的js文件</span></span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 只检查 src 下的js文件</span></span><br><span class=\"line\">        include: resolve(__dirname, <span class=\"string\">&#x27;src&#x27;</span>),</span><br><span class=\"line\">        <span class=\"comment\">// 优先执行</span></span><br><span class=\"line\">        <span class=\"attr\">enforce</span>: <span class=\"string\">&#x27;pre&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 延后执行</span></span><br><span class=\"line\">        <span class=\"comment\">// enforce: &#x27;post&#x27;,</span></span><br><span class=\"line\">        <span class=\"comment\">// 单个loader用loader</span></span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;eslint-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 以下配置只会生效一个</span></span><br><span class=\"line\">        <span class=\"attr\">oneOf</span>: []</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"webpack详细配置之resolve\"><a href=\"#webpack详细配置之resolve\" class=\"headerlink\" title=\"webpack详细配置之resolve\"></a>webpack详细配置之resolve</h2><p>resolve解析模块的规则</p>\n<ul>\n<li>alias 配置解析模块路径别名: 优点简写路径 缺点路径没有提示。</li>\n<li>extensions  配置省略文件路径的后缀名。<span style=\"background-color:yellow\">注意不能有相同的文件名。</span></li>\n<li>modules 告诉 webpack 解析模块是去找哪个目录，不用一个一个向上级目录去寻找，直接一步到位。</li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/js/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 解析模块的规则</span></span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 配置解析模块路径别名: 优点简写路径 缺点路径没有提示</span></span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">$css</span>: resolve(__dirname, <span class=\"string\">&#x27;src/css&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 配置省略文件路径的后缀名</span></span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.jsx&#x27;</span>, <span class=\"string\">&#x27;.css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">// 告诉 webpack 解析模块是去找哪个目录</span></span><br><span class=\"line\">    <span class=\"attr\">modules</span>: [resolve(__dirname, <span class=\"string\">&#x27;../../node_modules&#x27;</span>), <span class=\"string\">&#x27;node_modules&#x27;</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"webpack详细配置之-devserver\"><a href=\"#webpack详细配置之-devserver\" class=\"headerlink\" title=\"webpack详细配置之 devserver\"></a>webpack详细配置之 devserver</h2><p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 运行代码的目录</span></span><br><span class=\"line\">    <span class=\"attr\">contentBase</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>),</span><br><span class=\"line\">    <span class=\"comment\">// 监视 contentBase 目录下的所有文件，一旦文件变化就会 reload</span></span><br><span class=\"line\">    <span class=\"attr\">watchContentBase</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">watchOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 忽略文件</span></span><br><span class=\"line\">      <span class=\"attr\">ignored</span>: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 启动gzip压缩</span></span><br><span class=\"line\">    <span class=\"attr\">compress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 端口号</span></span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 域名</span></span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 自动打开浏览器</span></span><br><span class=\"line\">    <span class=\"attr\">open</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 开启HMR功能</span></span><br><span class=\"line\">    <span class=\"attr\">hot</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 不要显示启动服务器日志信息</span></span><br><span class=\"line\">    <span class=\"attr\">clientLogLevel</span>: <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 除了一些基本启动信息以外，其他内容都不要显示</span></span><br><span class=\"line\">    <span class=\"attr\">quiet</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 如果出错了，不要全屏提示~</span></span><br><span class=\"line\">    <span class=\"attr\">overlay</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 服务器代理 --&gt; 解决开发环境跨域问题</span></span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 一旦devServer(5000)服务器接受到 /api/xxx 的请求，就会把请求转发到另外一个服务器(3000)</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:3000&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 发送请求时，请求路径重写：将 /api/xxx --&gt; /xxx （去掉/api）</span></span><br><span class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;^/api&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"webpack详细配置之optimization\"><a href=\"#webpack详细配置之optimization\" class=\"headerlink\" title=\"webpack详细配置之optimization\"></a>webpack详细配置之optimization</h2><ul>\n<li><code>splitChunks</code> 代码分割。</li>\n<li><code>runtimeChunk</code>  将当前模块的记录其他模块的hash单独打包为一个文件 runtime。解决：修改a文件导致b文件的contenthash变化。</li>\n<li><code>minimizer </code>配置生产环境的压缩方案：js和css。</li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> TerserWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;terser-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/js/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].[contenthash:10].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;js/[name].[contenthash:10]_chunk.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">$css</span>: resolve(__dirname, <span class=\"string\">&#x27;src/css&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.jsx&#x27;</span>, <span class=\"string\">&#x27;.css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">modules</span>: [resolve(__dirname, <span class=\"string\">&#x27;../../node_modules&#x27;</span>), <span class=\"string\">&#x27;node_modules&#x27;</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">optimization</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">splitChunks</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: <span class=\"string\">&#x27;all&#x27;</span></span><br><span class=\"line\">      <span class=\"comment\">// 默认值，可以不写~</span></span><br><span class=\"line\">      <span class=\"comment\">/* minSize: 30 * 1024, // 分割的chunk最小为30kb</span></span><br><span class=\"line\"><span class=\"comment\">      maxSiza: 0, // 最大没有限制</span></span><br><span class=\"line\"><span class=\"comment\">      minChunks: 1, // 要提取的chunk最少被引用1次</span></span><br><span class=\"line\"><span class=\"comment\">      maxAsyncRequests: 5, // 按需加载时并行加载的文件的最大数量</span></span><br><span class=\"line\"><span class=\"comment\">      maxInitialRequests: 3, // 入口js文件最大并行请求数量</span></span><br><span class=\"line\"><span class=\"comment\">      automaticNameDelimiter: &#x27;~&#x27;, // 名称连接符</span></span><br><span class=\"line\"><span class=\"comment\">      name: true, // 可以使用命名规则</span></span><br><span class=\"line\"><span class=\"comment\">      cacheGroups: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        // 分割chunk的组</span></span><br><span class=\"line\"><span class=\"comment\">        // node_modules文件会被打包到 vendors 组的chunk中。--&gt; vendors~xxx.js</span></span><br><span class=\"line\"><span class=\"comment\">        // 满足上面的公共规则，如：大小超过30kb，至少被引用一次。</span></span><br><span class=\"line\"><span class=\"comment\">        vendors: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">          test: /[\\\\/]node_modules[\\\\/]/,</span></span><br><span class=\"line\"><span class=\"comment\">          // 优先级</span></span><br><span class=\"line\"><span class=\"comment\">          priority: -10</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">        default: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">          // 要提取的chunk最少被引用2次</span></span><br><span class=\"line\"><span class=\"comment\">          minChunks: 2,</span></span><br><span class=\"line\"><span class=\"comment\">          // 优先级</span></span><br><span class=\"line\"><span class=\"comment\">          priority: -20,</span></span><br><span class=\"line\"><span class=\"comment\">          // 如果当前要打包的模块，和之前已经被提取的模块是同一个，就会复用，而不是重新打包模块</span></span><br><span class=\"line\"><span class=\"comment\">          reuseExistingChunk: true</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; </span></span><br><span class=\"line\"><span class=\"comment\">      &#125;*/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 将当前模块的记录其他模块的hash单独打包为一个文件 runtime</span></span><br><span class=\"line\">    <span class=\"comment\">// 解决：修改a文件导致b文件的contenthash变化</span></span><br><span class=\"line\">    <span class=\"attr\">runtimeChunk</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"function\"><span class=\"params\">entrypoint</span> =&gt;</span> <span class=\"string\">`runtime-<span class=\"subst\">$&#123;entrypoint.name&#125;</span>`</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">minimizer</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// 配置生产环境的压缩方案：js和css</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> TerserWebpackPlugin(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        <span class=\"attr\">cache</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 开启多进程打包</span></span><br><span class=\"line\">        <span class=\"attr\">parallel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 启动source-map</span></span><br><span class=\"line\">        <span class=\"attr\">sourceMap</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","more":"<h1 id=\"webpack详细配置-smile\"><a href=\"#webpack详细配置-smile\" class=\"headerlink\" title=\"webpack详细配置:smile:\"></a>webpack详细配置:smile:</h1><h2 id=\"webpack详细配置之entry\"><a href=\"#webpack详细配置之entry\" class=\"headerlink\" title=\"webpack详细配置之entry\"></a>webpack详细配置之entry</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">entry: 入口起点</span><br><span class=\"line\">    1. string --&gt; &#x27;./src/index.js&#x27;</span><br><span class=\"line\">      单入口</span><br><span class=\"line\">      打包形成一个chunk。 输出一个bundle文件。</span><br><span class=\"line\">      此时chunk的名称默认是 main</span><br><span class=\"line\">    2. array  --&gt; [&#x27;./src/index.js&#x27;, &#x27;./src/add.js&#x27;]</span><br><span class=\"line\">      多入口</span><br><span class=\"line\">      所有入口文件最终只会形成一个chunk, 输出出去只有一个bundle文件。</span><br><span class=\"line\">        --&gt; 只有在HMR功能中让html热更新生效~</span><br><span class=\"line\">    3. object</span><br><span class=\"line\">      多入口</span><br><span class=\"line\">      有几个入口文件就形成几个chunk，输出几个bundle文件</span><br><span class=\"line\">      此时chunk的名称是 key</span><br><span class=\"line\"></span><br><span class=\"line\">      --&gt; 特殊用法</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          // 所有入口文件最终只会形成一个chunk, 输出出去只有一个bundle文件。</span><br><span class=\"line\">          index: [&#x27;./src/index.js&#x27;, &#x27;./src/count.js&#x27;], </span><br><span class=\"line\">          // 形成一个chunk，输出一个bundle文件。</span><br><span class=\"line\">          add: &#x27;./src/add.js&#x27;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">index</span>: [<span class=\"string\">&#x27;./src/index.js&#x27;</span>, <span class=\"string\">&#x27;./src/count.js&#x27;</span>], </span><br><span class=\"line\">    <span class=\"attr\">add</span>: <span class=\"string\">&#x27;./src/add.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"webpack详细配置之output\"><a href=\"#webpack详细配置之output\" class=\"headerlink\" title=\"webpack详细配置之output\"></a>webpack详细配置之output</h2><ul>\n<li><p><code>filename</code>:文件名称（指定名称+目录）。</p>\n</li>\n<li><p><code>path</code>:输出文件目录（将来所有资源输出的公共目录）。</p>\n</li>\n<li><p><code>publicPath</code>:所有资源引入公共路径前缀 –&gt; ‘imgs/a.jpg’ –&gt; ‘/imgs/a.jpg’。</p>\n</li>\n<li><p><code>chunkFilename</code>:非入口chunk的名称，如：</p>\n<p>第一种情况：通过import语法，将文件单独分割成一个chunk，这个chunk的名称会采用这个<code>chunkFilename: &#39;js/[name]_chunk.js&#39;</code>这个命名。</p>\n<p>第二种情况： 通过optimization将node_modules分割成单独的一个chunk，这个chunk的名称也会采用这个<code>chunkFilename: &#39;js/[name]_chunk.js&#39;</code>这个命名。</p>\n<p>关于代码分割详细看：<a href=\"https://aqingya.cn/2020/07/16/56/#code-split-%E4%BB%A3%E7%A0%81%E5%88%86%E5%89%B2\">这里。</a></p>\n</li>\n<li><p><code>library</code>:整个库向外暴露的变量名。</p>\n</li>\n<li><p><code>llibraryTarget: &#39;window&#39;</code>  变量名添加到哪个上 browser。</p>\n</li>\n<li><p><code>libraryTarget: &#39;global&#39;</code> 变量名添加到哪个上 node。</p>\n<br></li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 文件名称（指定名称+目录）</span></span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 输出文件目录（将来所有资源输出的公共目录）</span></span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>),</span><br><span class=\"line\">    <span class=\"comment\">// 所有资源引入公共路径前缀 --&gt; &#x27;imgs/a.jpg&#x27; --&gt; &#x27;/imgs/a.jpg&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">publicPath</span>: <span class=\"string\">&#x27;/&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;js/[name]_chunk.js&#x27;</span>, <span class=\"comment\">// 非入口chunk的名称</span></span><br><span class=\"line\">    <span class=\"comment\">// library: &#x27;[name]&#x27;, // 整个库向外暴露的变量名</span></span><br><span class=\"line\">    <span class=\"comment\">// libraryTarget: &#x27;window&#x27; // 变量名添加到哪个上 browser</span></span><br><span class=\"line\">    <span class=\"comment\">// libraryTarget: &#x27;global&#x27; // 变量名添加到哪个上 node</span></span><br><span class=\"line\">    <span class=\"comment\">// libraryTarget: &#x27;commonjs&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"webpack详细配置之module\"><a href=\"#webpack详细配置之module\" class=\"headerlink\" title=\"webpack详细配置之module\"></a>webpack详细配置之module</h2><ul>\n<li><code>test: /\\.css$/</code> :正则表达式，用来检测文件。</li>\n<li><code>loader: &#39;eslint-loader&#39; </code>单个loader用loader。</li>\n<li><code>use: [&#39;style-loader&#39;, &#39;css-loader&#39;]</code> 多个loader用use。</li>\n<li><code>exclude: /node_modules/ </code>排除node_modules下的js文件。</li>\n<li><code>include: resolve(__dirname, &#39;src&#39;) </code> 只检查 src 下的js文件。</li>\n<li><code>enforce: &#39;pre&#39;</code> 优先执行。</li>\n<li><code>enforce: &#39;post&#39;</code> 延后执行。</li>\n<li><code>oneOf: []</code> 以下配置只会生效一个。</li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// loader的配置</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 多个loader用use</span></span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.js$/</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 排除node_modules下的js文件</span></span><br><span class=\"line\">        exclude: <span class=\"regexp\">/node_modules/</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 只检查 src 下的js文件</span></span><br><span class=\"line\">        include: resolve(__dirname, <span class=\"string\">&#x27;src&#x27;</span>),</span><br><span class=\"line\">        <span class=\"comment\">// 优先执行</span></span><br><span class=\"line\">        <span class=\"attr\">enforce</span>: <span class=\"string\">&#x27;pre&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 延后执行</span></span><br><span class=\"line\">        <span class=\"comment\">// enforce: &#x27;post&#x27;,</span></span><br><span class=\"line\">        <span class=\"comment\">// 单个loader用loader</span></span><br><span class=\"line\">        <span class=\"attr\">loader</span>: <span class=\"string\">&#x27;eslint-loader&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">options</span>: &#123;&#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 以下配置只会生效一个</span></span><br><span class=\"line\">        <span class=\"attr\">oneOf</span>: []</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"webpack详细配置之resolve\"><a href=\"#webpack详细配置之resolve\" class=\"headerlink\" title=\"webpack详细配置之resolve\"></a>webpack详细配置之resolve</h2><p>resolve解析模块的规则</p>\n<ul>\n<li>alias 配置解析模块路径别名: 优点简写路径 缺点路径没有提示。</li>\n<li>extensions  配置省略文件路径的后缀名。<span style=\"background-color:yellow\">注意不能有相同的文件名。</span></li>\n<li>modules 告诉 webpack 解析模块是去找哪个目录，不用一个一个向上级目录去寻找，直接一步到位。</li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/js/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;development&#x27;</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 解析模块的规则</span></span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 配置解析模块路径别名: 优点简写路径 缺点路径没有提示</span></span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">$css</span>: resolve(__dirname, <span class=\"string\">&#x27;src/css&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 配置省略文件路径的后缀名</span></span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.jsx&#x27;</span>, <span class=\"string\">&#x27;.css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"comment\">// 告诉 webpack 解析模块是去找哪个目录</span></span><br><span class=\"line\">    <span class=\"attr\">modules</span>: [resolve(__dirname, <span class=\"string\">&#x27;../../node_modules&#x27;</span>), <span class=\"string\">&#x27;node_modules&#x27;</span>]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"webpack详细配置之-devserver\"><a href=\"#webpack详细配置之-devserver\" class=\"headerlink\" title=\"webpack详细配置之 devserver\"></a>webpack详细配置之 devserver</h2><p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 运行代码的目录</span></span><br><span class=\"line\">    <span class=\"attr\">contentBase</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>),</span><br><span class=\"line\">    <span class=\"comment\">// 监视 contentBase 目录下的所有文件，一旦文件变化就会 reload</span></span><br><span class=\"line\">    <span class=\"attr\">watchContentBase</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">watchOptions</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 忽略文件</span></span><br><span class=\"line\">      <span class=\"attr\">ignored</span>: <span class=\"regexp\">/node_modules/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 启动gzip压缩</span></span><br><span class=\"line\">    <span class=\"attr\">compress</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 端口号</span></span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">5000</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 域名</span></span><br><span class=\"line\">    <span class=\"attr\">host</span>: <span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 自动打开浏览器</span></span><br><span class=\"line\">    <span class=\"attr\">open</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 开启HMR功能</span></span><br><span class=\"line\">    <span class=\"attr\">hot</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 不要显示启动服务器日志信息</span></span><br><span class=\"line\">    <span class=\"attr\">clientLogLevel</span>: <span class=\"string\">&#x27;none&#x27;</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 除了一些基本启动信息以外，其他内容都不要显示</span></span><br><span class=\"line\">    <span class=\"attr\">quiet</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 如果出错了，不要全屏提示~</span></span><br><span class=\"line\">    <span class=\"attr\">overlay</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 服务器代理 --&gt; 解决开发环境跨域问题</span></span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 一旦devServer(5000)服务器接受到 /api/xxx 的请求，就会把请求转发到另外一个服务器(3000)</span></span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;http://localhost:3000&#x27;</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 发送请求时，请求路径重写：将 /api/xxx --&gt; /xxx （去掉/api）</span></span><br><span class=\"line\">        <span class=\"attr\">pathRewrite</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&#x27;^/api&#x27;</span>: <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"webpack详细配置之optimization\"><a href=\"#webpack详细配置之optimization\" class=\"headerlink\" title=\"webpack详细配置之optimization\"></a>webpack详细配置之optimization</h2><ul>\n<li><code>splitChunks</code> 代码分割。</li>\n<li><code>runtimeChunk</code>  将当前模块的记录其他模块的hash单独打包为一个文件 runtime。解决：修改a文件导致b文件的contenthash变化。</li>\n<li><code>minimizer </code>配置生产环境的压缩方案：js和css。</li>\n</ul>\n<p>webpack.config.js文件</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; resolve &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> TerserWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;terser-webpack-plugin&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  <span class=\"attr\">entry</span>: <span class=\"string\">&#x27;./src/js/index.js&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">output</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">filename</span>: <span class=\"string\">&#x27;js/[name].[contenthash:10].js&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">path</span>: resolve(__dirname, <span class=\"string\">&#x27;build&#x27;</span>),</span><br><span class=\"line\">    <span class=\"attr\">chunkFilename</span>: <span class=\"string\">&#x27;js/[name].[contenthash:10]_chunk.js&#x27;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">module</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">rules</span>: [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"attr\">test</span>: <span class=\"regexp\">/\\.css$/</span>,</span><br><span class=\"line\">        use: [<span class=\"string\">&#x27;style-loader&#x27;</span>, <span class=\"string\">&#x27;css-loader&#x27;</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">plugins</span>: [<span class=\"keyword\">new</span> HtmlWebpackPlugin()],</span><br><span class=\"line\">  <span class=\"attr\">mode</span>: <span class=\"string\">&#x27;production&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">resolve</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">alias</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">$css</span>: resolve(__dirname, <span class=\"string\">&#x27;src/css&#x27;</span>)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">extensions</span>: [<span class=\"string\">&#x27;.js&#x27;</span>, <span class=\"string\">&#x27;.json&#x27;</span>, <span class=\"string\">&#x27;.jsx&#x27;</span>, <span class=\"string\">&#x27;.css&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">modules</span>: [resolve(__dirname, <span class=\"string\">&#x27;../../node_modules&#x27;</span>), <span class=\"string\">&#x27;node_modules&#x27;</span>]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">optimization</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">splitChunks</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">chunks</span>: <span class=\"string\">&#x27;all&#x27;</span></span><br><span class=\"line\">      <span class=\"comment\">// 默认值，可以不写~</span></span><br><span class=\"line\">      <span class=\"comment\">/* minSize: 30 * 1024, // 分割的chunk最小为30kb</span></span><br><span class=\"line\"><span class=\"comment\">      maxSiza: 0, // 最大没有限制</span></span><br><span class=\"line\"><span class=\"comment\">      minChunks: 1, // 要提取的chunk最少被引用1次</span></span><br><span class=\"line\"><span class=\"comment\">      maxAsyncRequests: 5, // 按需加载时并行加载的文件的最大数量</span></span><br><span class=\"line\"><span class=\"comment\">      maxInitialRequests: 3, // 入口js文件最大并行请求数量</span></span><br><span class=\"line\"><span class=\"comment\">      automaticNameDelimiter: &#x27;~&#x27;, // 名称连接符</span></span><br><span class=\"line\"><span class=\"comment\">      name: true, // 可以使用命名规则</span></span><br><span class=\"line\"><span class=\"comment\">      cacheGroups: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        // 分割chunk的组</span></span><br><span class=\"line\"><span class=\"comment\">        // node_modules文件会被打包到 vendors 组的chunk中。--&gt; vendors~xxx.js</span></span><br><span class=\"line\"><span class=\"comment\">        // 满足上面的公共规则，如：大小超过30kb，至少被引用一次。</span></span><br><span class=\"line\"><span class=\"comment\">        vendors: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">          test: /[\\\\/]node_modules[\\\\/]/,</span></span><br><span class=\"line\"><span class=\"comment\">          // 优先级</span></span><br><span class=\"line\"><span class=\"comment\">          priority: -10</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">        default: &#123;</span></span><br><span class=\"line\"><span class=\"comment\">          // 要提取的chunk最少被引用2次</span></span><br><span class=\"line\"><span class=\"comment\">          minChunks: 2,</span></span><br><span class=\"line\"><span class=\"comment\">          // 优先级</span></span><br><span class=\"line\"><span class=\"comment\">          priority: -20,</span></span><br><span class=\"line\"><span class=\"comment\">          // 如果当前要打包的模块，和之前已经被提取的模块是同一个，就会复用，而不是重新打包模块</span></span><br><span class=\"line\"><span class=\"comment\">          reuseExistingChunk: true</span></span><br><span class=\"line\"><span class=\"comment\">        &#125; </span></span><br><span class=\"line\"><span class=\"comment\">      &#125;*/</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"comment\">// 将当前模块的记录其他模块的hash单独打包为一个文件 runtime</span></span><br><span class=\"line\">    <span class=\"comment\">// 解决：修改a文件导致b文件的contenthash变化</span></span><br><span class=\"line\">    <span class=\"attr\">runtimeChunk</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">name</span>: <span class=\"function\"><span class=\"params\">entrypoint</span> =&gt;</span> <span class=\"string\">`runtime-<span class=\"subst\">$&#123;entrypoint.name&#125;</span>`</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">minimizer</span>: [</span><br><span class=\"line\">      <span class=\"comment\">// 配置生产环境的压缩方案：js和css</span></span><br><span class=\"line\">      <span class=\"keyword\">new</span> TerserWebpackPlugin(&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 开启缓存</span></span><br><span class=\"line\">        <span class=\"attr\">cache</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 开启多进程打包</span></span><br><span class=\"line\">        <span class=\"attr\">parallel</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">// 启动source-map</span></span><br><span class=\"line\">        <span class=\"attr\">sourceMap</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","categories":[{"name":"WebPack","path":"api/categories/WebPack.json"}],"tags":[{"name":"WebPack","path":"api/tags/WebPack.json"}]}